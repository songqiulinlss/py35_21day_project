2022-05-17 21:36:36,459 - [test_register.py-->line:46] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 21:36:36,459 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:36:36,549 - [test_register.py-->line:46] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 21:36:36,559 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:36:36,646 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:36:36,730 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:36:36,811 - [test_register.py-->line:46] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-17 21:36:36,811 - [test_register.py-->line:48] - ERROR: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在

2022-05-17 21:36:36,901 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:36:36,978 - [test_register.py-->line:46] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-17 21:36:36,978 - [test_register.py-->line:48] - ERROR: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在

2022-05-17 21:36:37,063 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:36:37,137 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:36:37,213 - [test_register.py-->line:46] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-17 21:36:37,213 - [test_register.py-->line:48] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-17 21:36:37,288 - [test_register.py-->line:46] - ERROR: 用例-----[注册名11位]-----执行失败
2022-05-17 21:36:37,288 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在

2022-05-17 21:36:37,372 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:37:06,633 - [test_register.py-->line:46] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 21:37:06,633 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:37:06,721 - [test_register.py-->line:46] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 21:37:06,721 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:37:06,807 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:37:06,887 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:37:06,968 - [test_register.py-->line:46] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-17 21:37:06,968 - [test_register.py-->line:48] - ERROR: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在

2022-05-17 21:37:07,050 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:37:07,125 - [test_register.py-->line:46] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-17 21:37:07,125 - [test_register.py-->line:48] - ERROR: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在

2022-05-17 21:37:07,208 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:37:07,280 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:37:07,361 - [test_register.py-->line:46] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-17 21:37:07,361 - [test_register.py-->line:48] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-17 21:37:07,441 - [test_register.py-->line:46] - ERROR: 用例-----[注册名11位]-----执行失败
2022-05-17 21:37:07,441 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在

2022-05-17 21:37:07,517 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:37:07,586 - [test_register.py-->line:46] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 21:37:07,586 - [test_register.py-->line:48] - ERROR: '用户类型为空' != '无效的手机格式'
- 用户类型为空
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户类型为空' != '无效的手机格式'
- 用户类型为空
+ 无效的手机格式

2022-05-17 21:37:49,882 - [test_register.py-->line:46] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 21:37:49,882 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:37:49,960 - [test_register.py-->line:46] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 21:37:49,960 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:37:50,047 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:37:50,119 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:37:50,200 - [test_register.py-->line:46] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-17 21:37:50,201 - [test_register.py-->line:48] - ERROR: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在

2022-05-17 21:37:50,280 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:37:50,361 - [test_register.py-->line:46] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-17 21:37:50,361 - [test_register.py-->line:48] - ERROR: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在

2022-05-17 21:37:50,441 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:37:50,530 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:37:50,614 - [test_register.py-->line:46] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-17 21:37:50,614 - [test_register.py-->line:48] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-17 21:37:50,691 - [test_register.py-->line:46] - ERROR: 用例-----[注册名11位]-----执行失败
2022-05-17 21:37:50,691 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在

2022-05-17 21:37:50,771 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:37:50,843 - [test_register.py-->line:46] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 21:37:50,843 - [test_register.py-->line:48] - ERROR: '用户类型为空' != '账号已存在'
- 用户类型为空
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户类型为空' != '账号已存在'
- 用户类型为空
+ 账号已存在

2022-05-17 21:38:18,289 - [test_register.py-->line:46] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 21:38:18,289 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:38:18,363 - [test_register.py-->line:46] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 21:38:18,363 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:38:18,440 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:38:18,516 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:38:18,603 - [test_register.py-->line:46] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-17 21:38:18,604 - [test_register.py-->line:48] - ERROR: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无效的手机格式' != '账号已存在'
- 无效的手机格式
+ 账号已存在

2022-05-17 21:38:18,677 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:38:18,761 - [test_register.py-->line:46] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-17 21:38:18,761 - [test_register.py-->line:48] - ERROR: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '账号已经存在' != '账号已存在'
- 账号已经存在
?    -
+ 账号已存在

2022-05-17 21:38:18,831 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:38:18,903 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:38:18,990 - [test_register.py-->line:46] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-17 21:38:18,991 - [test_register.py-->line:48] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-17 21:38:19,070 - [test_register.py-->line:46] - ERROR: 用例-----[注册名11位]-----执行失败
2022-05-17 21:38:19,071 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在

2022-05-17 21:38:19,146 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:38:19,265 - [test_register.py-->line:46] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 21:38:19,265 - [test_register.py-->line:48] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-17 21:45:38,141 - [test_register.py-->line:52] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-17 21:45:38,256 - [test_register.py-->line:46] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 21:45:38,256 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:45:38,346 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:45:38,424 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:45:38,547 - [test_register.py-->line:46] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-17 21:45:38,547 - [test_register.py-->line:48] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-17 21:45:38,627 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:45:38,751 - [test_register.py-->line:52] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 21:45:38,838 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:45:38,921 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:45:39,004 - [test_register.py-->line:52] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 21:45:39,129 - [test_register.py-->line:46] - ERROR: 用例-----[注册名11位]-----执行失败
2022-05-17 21:45:39,129 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '账号已存在'
- 用户名长度超过10位
+ 账号已存在

2022-05-17 21:45:39,202 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:45:39,275 - [test_register.py-->line:46] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 21:45:39,275 - [test_register.py-->line:48] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-17 21:47:30,635 - [test_register.py-->line:52] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-17 21:47:30,743 - [test_register.py-->line:52] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-17 21:47:30,813 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:47:30,891 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:47:30,961 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-17 21:47:31,045 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:47:31,158 - [test_register.py-->line:52] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 21:47:31,243 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:47:31,323 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:47:31,405 - [test_register.py-->line:52] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 21:47:31,524 - [test_register.py-->line:46] - ERROR: 用例-----[用户名名11位]-----执行失败
2022-05-17 21:47:31,524 - [test_register.py-->line:48] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-17 21:47:31,598 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:47:31,725 - [test_register.py-->line:52] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-17 21:49:02,152 - [test_register.py-->line:52] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-17 21:49:02,268 - [test_register.py-->line:52] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-17 21:49:02,342 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:49:02,424 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:49:02,497 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-17 21:49:02,578 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:49:02,687 - [test_register.py-->line:52] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 21:49:02,768 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:49:02,839 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:49:02,918 - [test_register.py-->line:52] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 21:49:03,003 - [test_register.py-->line:46] - ERROR: 用例-----[用户名11位]-----执行失败
2022-05-17 21:49:03,003 - [test_register.py-->line:48] - ERROR: '用户名长度超过10位' != '用户昵称长度超过10位'
- 用户名长度超过10位
?   ^
+ 用户昵称长度超过10位
?   ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 43, in test_register
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '用户名长度超过10位' != '用户昵称长度超过10位'
- 用户名长度超过10位
?   ^
+ 用户昵称长度超过10位
?   ^^

2022-05-17 21:49:03,078 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:49:03,199 - [test_register.py-->line:52] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-17 21:49:56,758 - [test_register.py-->line:52] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-17 21:49:56,876 - [test_register.py-->line:52] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-17 21:49:56,955 - [test_register.py-->line:52] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 21:49:57,044 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 21:49:57,129 - [test_register.py-->line:52] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-17 21:49:57,208 - [test_register.py-->line:52] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 21:49:57,328 - [test_register.py-->line:52] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 21:49:57,410 - [test_register.py-->line:52] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 21:49:57,487 - [test_register.py-->line:52] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 21:49:57,574 - [test_register.py-->line:52] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 21:49:57,664 - [test_register.py-->line:52] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-17 21:49:57,745 - [test_register.py-->line:52] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 21:49:57,873 - [test_register.py-->line:52] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-17 22:27:41,196 - [test_register.py-->line:45] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 22:27:41,198 - [test_register.py-->line:47] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 59, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-17 22:27:41,310 - [test_register.py-->line:45] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 22:27:41,310 - [test_register.py-->line:47] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 59, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-17 22:27:41,399 - [test_register.py-->line:51] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 22:27:41,476 - [test_register.py-->line:51] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 22:27:41,550 - [test_register.py-->line:51] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-17 22:27:41,633 - [test_register.py-->line:51] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 22:27:41,772 - [test_register.py-->line:51] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 22:27:41,851 - [test_register.py-->line:51] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 22:27:41,922 - [test_register.py-->line:51] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 22:27:41,993 - [test_register.py-->line:51] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 22:27:42,075 - [test_register.py-->line:51] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-17 22:27:42,161 - [test_register.py-->line:51] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 22:27:42,295 - [test_register.py-->line:45] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 22:27:42,295 - [test_register.py-->line:47] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 42, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 59, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-17 22:30:35,597 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-17 22:30:35,597 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-17 22:30:35,683 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-17 22:30:35,683 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-17 22:30:35,756 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-17 22:30:35,841 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-17 22:30:35,914 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-17 22:30:36,003 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-17 22:30:36,093 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-17 22:30:36,167 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-17 22:30:36,247 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-17 22:30:36,324 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-17 22:30:36,398 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-17 22:30:36,472 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-17 22:30:36,560 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-17 22:30:36,560 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 20:47:07,399 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 20:47:07,409 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 20:47:07,527 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 20:47:07,527 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 20:47:07,614 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 20:47:07,684 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 20:47:07,767 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 20:47:07,844 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 20:47:07,959 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 20:47:08,038 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 20:47:08,118 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 20:47:08,195 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 20:47:08,275 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 20:47:08,357 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 20:47:08,481 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 20:47:08,481 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:00:29,008 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 21:00:29,009 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:00:29,128 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 21:00:29,128 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:00:29,204 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 21:00:29,293 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:00:29,375 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:00:29,449 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 21:00:29,575 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 21:00:29,652 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 21:00:29,730 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 21:00:29,804 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 21:00:29,874 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 21:00:29,952 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 21:00:30,063 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 21:00:30,063 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:01:59,832 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 21:01:59,832 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:01:59,906 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 21:01:59,906 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:01:59,993 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 21:02:00,078 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:02:00,157 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:02:00,238 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 21:02:00,323 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 21:02:00,401 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 21:02:00,479 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 21:02:00,573 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 21:02:00,643 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 21:02:00,729 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 21:02:00,823 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 21:02:00,823 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:14:38,368 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:14:38,368 - [test_login2.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:14:38,456 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:14:38,456 - [test_login2.py-->line:49] - ERROR: {'code': 1, 'msg': '手机号为空'} not in {'code': 1, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 1, 'msg': '手机号为空'} not in {'code': 1, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:14:38,531 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:14:38,610 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:14:38,728 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:14:38,728 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:14:38,863 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:14:38,863 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:14:38,934 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:14:38,934 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码为空'} not in {'code': 1, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码为空'} not in {'code': 1, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:02,950 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:15:02,950 - [test_login2.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,026 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:15:03,026 - [test_login2.py-->line:49] - ERROR: {'code': 1, 'msg': '手机号为空'} not in {'code': 1, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 1, 'msg': '手机号为空'} not in {'code': 1, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,096 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:15:03,169 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:15:03,250 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:15:03,251 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,322 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:15:03,323 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码格式为8到16位'} not in {'code': 1001, 'msg': '账号信息错误', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,395 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:15:03,395 - [test_login2.py-->line:49] - ERROR: {'code': 2, 'msg': '密码为空'} not in {'code': 1, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 44, in test_login
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '密码为空'} not in {'code': 1, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,515 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 21:15:03,515 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,623 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 21:15:03,623 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:15:03,695 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 21:15:03,773 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:15:03,857 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:15:03,934 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 21:15:04,047 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 21:15:04,124 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 21:15:04,207 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 21:15:04,278 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 21:15:04,365 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 21:15:04,447 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 21:15:04,558 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 21:15:04,558 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:17:31,848 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:17:31,848 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 21:17:31,922 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:17:31,922 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 21:17:32,009 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:17:32,081 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:17:32,208 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:17:32,208 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:17:32,354 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:17:32,354 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:17:32,424 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:17:32,424 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 21:18:44,594 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:18:44,594 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 21:18:44,686 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:18:44,686 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 21:18:44,765 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:18:44,843 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:18:44,918 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:18:44,919 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:18:45,004 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:18:45,004 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:18:45,081 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:18:45,081 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 21:19:25,060 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:19:25,060 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 21:19:25,133 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:19:25,133 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 21:19:25,218 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:19:25,296 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:19:25,384 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:19:25,384 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:19:25,473 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:19:25,473 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:19:25,559 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:19:25,560 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 21:19:56,923 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:19:56,924 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 21:19:57,012 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:19:57,013 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 21:19:57,093 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:19:57,166 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:19:57,283 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:19:57,283 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:19:57,399 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:19:57,400 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:19:57,473 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:19:57,473 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 21:26:35,003 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 21:26:35,003 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 21:26:35,082 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 21:26:35,082 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 21:26:35,155 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:26:35,245 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:26:35,378 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 21:26:35,378 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:26:35,526 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 21:26:35,527 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 21:26:35,600 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 21:26:35,600 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 21:26:35,722 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 21:26:35,722 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:26:35,855 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 21:26:35,855 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 21:26:35,935 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 21:26:36,009 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 21:26:36,088 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 21:26:36,168 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 21:26:36,277 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 21:26:36,358 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 21:26:36,439 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 21:26:36,518 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 21:26:36,606 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 21:26:36,691 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 21:26:36,814 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 21:26:36,814 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:36:12,118 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 22:36:12,118 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 22:36:12,195 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 22:36:12,195 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 22:36:12,278 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:36:12,357 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:36:12,481 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 22:36:12,481 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:36:12,609 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 22:36:12,610 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:36:12,682 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 22:36:12,682 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 22:36:12,908 - [test_recharge.py-->line:66] - INFO: 用例----[充值成功]----执行成功
2022-05-18 22:36:12,982 - [test_recharge.py-->line:62] - ERROR: 用例----[id错误]----执行失败
2022-05-18 22:36:12,982 - [test_recharge.py-->line:63] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2022-05-18 22:36:13,076 - [test_recharge.py-->line:62] - ERROR: 用例----[不输入id]----执行失败
2022-05-18 22:36:13,076 - [test_recharge.py-->line:63] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-05-18 22:36:13,150 - [test_recharge.py-->line:62] - ERROR: 用例----[不输入金额]----执行失败
2022-05-18 22:36:13,150 - [test_recharge.py-->line:63] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:36:13,221 - [test_recharge.py-->line:62] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-18 22:36:13,222 - [test_recharge.py-->line:63] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:36:13,299 - [test_recharge.py-->line:62] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-18 22:36:13,299 - [test_recharge.py-->line:63] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:36:13,378 - [test_recharge.py-->line:66] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-18 22:36:13,452 - [test_recharge.py-->line:62] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-18 22:36:13,452 - [test_recharge.py-->line:63] - ERROR: '金额小数点超过两位' != '余额小数超过两位'
- 金额小数点超过两位
? ^   -
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数点超过两位' != '余额小数超过两位'
- 金额小数点超过两位
? ^   -
+ 余额小数超过两位
? ^

2022-05-18 22:36:13,584 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 22:36:13,584 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:36:13,698 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 22:36:13,698 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:36:13,777 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 22:36:13,856 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:36:13,926 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:36:13,999 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 22:36:14,115 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 22:36:14,188 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 22:36:14,277 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 22:36:14,356 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 22:36:14,433 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 22:36:14,504 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 22:36:14,629 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 22:36:14,629 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:38:08,848 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 22:38:08,849 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 22:38:08,920 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 22:38:08,920 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 22:38:09,001 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:38:09,075 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:38:09,193 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 22:38:09,193 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:38:09,302 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 22:38:09,302 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:38:09,376 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 22:38:09,376 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 22:38:09,588 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-18 22:38:09,661 - [test_recharge.py-->line:64] - ERROR: 用例----[id错误]----执行失败
2022-05-18 22:38:09,662 - [test_recharge.py-->line:65] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2022-05-18 22:38:09,749 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入id]----执行失败
2022-05-18 22:38:09,749 - [test_recharge.py-->line:65] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-05-18 22:38:09,830 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-18 22:38:09,831 - [test_recharge.py-->line:65] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:38:09,909 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-18 22:38:09,909 - [test_recharge.py-->line:65] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:38:09,985 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-18 22:38:09,985 - [test_recharge.py-->line:65] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-05-18 22:38:10,059 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-18 22:38:10,130 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-18 22:38:10,130 - [test_recharge.py-->line:65] - ERROR: '金额小数点超过两位' != '余额小数超过两位'
- 金额小数点超过两位
? ^   -
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数点超过两位' != '余额小数超过两位'
- 金额小数点超过两位
? ^   -
+ 余额小数超过两位
? ^

2022-05-18 22:38:10,259 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 22:38:10,259 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:38:10,368 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 22:38:10,368 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:38:10,449 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 22:38:10,523 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:38:10,593 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:38:10,677 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 22:38:10,793 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 22:38:10,871 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 22:38:10,951 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 22:38:11,040 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 22:38:11,126 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 22:38:11,196 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 22:38:11,313 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 22:38:11,313 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:41:49,630 - [test_login2.py-->line:47] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-18 22:41:49,631 - [test_login2.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-18 22:41:49,709 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-18 22:41:49,709 - [test_login2.py-->line:49] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 43, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-18 22:41:49,795 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:41:49,874 - [test_login2.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:41:49,986 - [test_login2.py-->line:47] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-18 22:41:49,986 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:41:50,095 - [test_login2.py-->line:47] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-18 22:41:50,095 - [test_login2.py-->line:49] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-18 22:41:50,170 - [test_login2.py-->line:47] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-18 22:41:50,170 - [test_login2.py-->line:49] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 42, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-18 22:41:50,363 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-18 22:41:50,440 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-18 22:41:50,516 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-18 22:41:50,595 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-18 22:41:50,595 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-18 22:41:50,674 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-18 22:41:50,674 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-18 22:41:50,756 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-18 22:41:50,756 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-18 22:41:50,846 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-18 22:41:50,931 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-18 22:41:50,931 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-18 22:41:51,049 - [test_register.py-->line:47] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-18 22:41:51,049 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:41:51,155 - [test_register.py-->line:47] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-18 22:41:51,155 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-18 22:41:51,229 - [test_register.py-->line:53] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-18 22:41:51,304 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-18 22:41:51,391 - [test_register.py-->line:53] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-18 22:41:51,465 - [test_register.py-->line:53] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-18 22:41:51,582 - [test_register.py-->line:53] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-18 22:41:51,660 - [test_register.py-->line:53] - INFO: 用例-----[密码7位]-----执行通过
2022-05-18 22:41:51,739 - [test_register.py-->line:53] - INFO: 用例-----[密码17位]-----执行通过
2022-05-18 22:41:51,819 - [test_register.py-->line:53] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-18 22:41:51,890 - [test_register.py-->line:53] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-18 22:41:51,969 - [test_register.py-->line:53] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-18 22:41:52,089 - [test_register.py-->line:47] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-18 22:41:52,089 - [test_register.py-->line:49] - ERROR: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 44, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 61, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 0, 'msg': 'OK'} not in {'code': 2, 'msg': '账号已存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-25 21:13:43,690 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:13:43,768 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:13:43,845 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:13:43,927 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:13:43,998 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:13:44,106 - [test_register.py-->line:51] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-25 21:13:44,106 - [test_register.py-->line:53] - ERROR: {'code': 2, 'msg': '账号已存在'} not in {'code': 0, 'msg': 'OK', 'data': {'id': 295242, 'reg_name': '小柠檬', 'mobile_phone': '17783427543'}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 48, in test_register
    self.AssertDictIn(expected,res)
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 65, in AssertDictIn
    raise AssertionError("{} not in {}".format(expected,res))
AssertionError: {'code': 2, 'msg': '账号已存在'} not in {'code': 0, 'msg': 'OK', 'data': {'id': 295242, 'reg_name': '小柠檬', 'mobile_phone': '17783427543'}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2022-05-25 21:13:44,180 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:13:44,269 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:13:44,367 - [test_register.py-->line:57] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:13:44,445 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:13:44,534 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:13:44,642 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:14:28,650 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:14:28,734 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:14:28,808 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:14:28,888 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:14:28,986 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:14:29,065 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:14:29,144 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:14:29,230 - [test_register.py-->line:57] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:14:29,319 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:14:29,410 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:14:29,534 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:14:53,178 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:14:53,251 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:14:53,333 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:14:53,405 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:14:53,519 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:14:53,598 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:14:53,678 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:14:53,764 - [test_register.py-->line:57] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:14:53,896 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:15:25,765 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:15:25,839 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:15:25,921 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:15:26,008 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:15:26,113 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:15:26,190 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:15:26,268 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:15:26,388 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:16:45,738 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:16:45,824 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:16:45,898 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:16:45,970 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:16:46,040 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:16:46,144 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:16:46,227 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:16:46,301 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:16:46,382 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:16:46,458 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:16:46,584 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:18:04,927 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:18:05,012 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:18:05,091 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:18:05,169 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:18:05,246 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:18:05,343 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:18:05,420 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:18:05,499 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:18:05,573 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:18:05,654 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:18:05,760 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:18:45,648 - [test_register.py-->line:57] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 21:18:45,761 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:18:45,841 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:18:45,919 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:18:46,001 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:18:46,080 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:18:46,192 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:18:46,280 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:18:46,368 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:18:46,443 - [test_register.py-->line:57] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:18:46,512 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:18:46,585 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:18:46,685 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:18:59,293 - [test_register.py-->line:57] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 21:18:59,425 - [test_register.py-->line:57] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:18:59,503 - [test_register.py-->line:57] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:18:59,592 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:18:59,679 - [test_register.py-->line:57] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:18:59,768 - [test_register.py-->line:57] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:18:59,893 - [test_register.py-->line:57] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:18:59,965 - [test_register.py-->line:57] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:19:00,042 - [test_register.py-->line:57] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:19:00,131 - [test_register.py-->line:57] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:19:00,211 - [test_register.py-->line:57] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:19:00,283 - [test_register.py-->line:57] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:19:00,398 - [test_register.py-->line:57] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:22:51,198 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-25 21:22:51,198 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-25 21:22:51,268 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-25 21:22:51,268 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-25 21:22:51,344 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:22:51,423 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:22:51,551 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-25 21:22:51,551 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 21:22:51,668 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-25 21:22:51,669 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 21:22:51,744 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-25 21:22:51,744 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-25 21:22:51,950 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-25 21:22:52,028 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-25 21:22:52,105 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-25 21:22:52,179 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-25 21:22:52,179 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-25 21:22:52,266 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-25 21:22:52,266 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 21:22:52,344 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-25 21:22:52,344 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 21:22:52,421 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-25 21:22:52,499 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-25 21:22:52,499 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 21:22:52,613 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 21:22:52,730 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 21:22:52,807 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 21:22:52,900 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 21:22:52,980 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 21:22:53,058 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 21:22:53,166 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 21:22:53,241 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 21:22:53,320 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 21:22:53,402 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 21:22:53,476 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 21:22:53,548 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 21:22:53,658 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 21:59:24,382 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功]----执行失败
2022-05-25 21:59:24,383 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 21:59:24,475 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-05-25 21:59:24,475 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 21:59:24,552 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-05-25 21:59:24,553 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 21:59:24,633 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-25 21:59:24,633 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 21:59:24,720 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-25 21:59:24,803 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-25 21:59:24,804 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-25 21:59:24,883 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为负数]----执行失败
2022-05-25 21:59:24,883 - [test_withdraw.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2022-05-25 21:59:24,974 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-25 21:59:24,974 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-25 21:59:25,046 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-25 21:59:25,046 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 21:59:25,134 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-大于50万]----执行失败
2022-05-25 21:59:25,134 - [test_withdraw.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2022-05-25 21:59:25,209 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-25 22:00:40,544 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功]----执行失败
2022-05-25 22:00:40,544 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:00:40,628 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-05-25 22:00:40,628 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:00:40,712 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-05-25 22:00:40,712 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:00:40,785 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-25 22:00:40,785 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:00:40,878 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-25 22:00:40,965 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-25 22:00:40,965 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-25 22:00:41,047 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-25 22:00:41,121 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-25 22:00:41,121 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-25 22:00:41,194 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-25 22:00:41,194 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:00:41,282 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-25 22:00:41,356 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-25 22:02:27,769 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-25 22:02:27,770 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-25 22:02:27,853 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-25 22:02:27,853 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-25 22:02:27,936 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:02:28,018 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:02:28,116 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-25 22:02:28,116 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:02:28,228 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-25 22:02:28,228 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:02:28,301 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-25 22:02:28,301 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-25 22:02:28,486 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-25 22:02:28,564 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-25 22:02:28,646 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-25 22:02:28,717 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-25 22:02:28,717 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-25 22:02:28,790 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-25 22:02:28,790 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:02:28,873 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-25 22:02:28,874 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:02:28,952 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-25 22:02:29,029 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-25 22:02:29,030 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:02:29,139 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 22:02:29,253 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 22:02:29,332 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 22:02:29,405 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:02:29,483 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:02:29,563 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 22:02:29,668 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 22:02:29,757 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 22:02:29,838 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 22:02:29,919 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 22:02:30,000 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 22:02:30,077 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 22:02:30,180 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 22:02:30,364 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功]----执行失败
2022-05-25 22:02:30,364 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:02:30,454 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-05-25 22:02:30,454 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:02:30,526 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-05-25 22:02:30,526 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:02:30,609 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-25 22:02:30,609 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:02:30,682 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-25 22:02:30,768 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-25 22:02:30,768 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-25 22:02:30,846 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-25 22:02:30,917 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-25 22:02:30,917 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-25 22:02:30,991 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-25 22:02:30,991 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:02:31,075 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-25 22:02:31,152 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-25 22:07:59,409 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-25 22:07:59,410 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-25 22:07:59,548 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-25 22:07:59,548 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-25 22:07:59,681 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:07:59,785 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:07:59,893 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-25 22:07:59,893 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:08:00,002 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-25 22:08:00,002 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:08:00,083 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-25 22:08:00,083 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-25 22:08:00,274 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-25 22:08:00,353 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-25 22:08:00,431 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-25 22:08:00,503 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-25 22:08:00,503 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-25 22:08:00,582 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-25 22:08:00,583 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:08:00,670 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-25 22:08:00,670 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:08:00,742 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-25 22:08:00,828 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-25 22:08:00,828 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:08:00,930 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 22:08:01,039 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 22:08:01,125 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 22:08:01,198 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:08:01,269 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:08:01,352 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 22:08:01,458 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 22:08:01,533 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 22:08:01,612 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 22:08:01,685 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 22:08:01,769 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 22:08:01,848 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 22:08:01,974 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 22:08:02,183 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-25 22:08:02,271 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-25 22:08:02,353 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-25 22:08:02,435 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-25 22:08:02,435 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:08:02,521 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-25 22:08:02,613 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-25 22:08:02,613 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-25 22:08:02,693 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-25 22:08:02,780 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-25 22:08:02,780 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-25 22:08:02,872 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-25 22:08:02,872 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:08:02,948 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-25 22:08:03,033 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-25 22:10:41,655 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-25 22:10:41,655 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-25 22:10:41,732 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-25 22:10:41,732 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-25 22:10:41,807 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:10:41,887 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:10:41,996 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-25 22:10:41,996 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:10:42,098 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-25 22:10:42,098 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-25 22:10:42,178 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-25 22:10:42,178 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-25 22:10:42,375 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-25 22:10:42,470 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-25 22:10:42,569 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-25 22:10:42,647 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-25 22:10:42,647 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-25 22:10:42,716 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-25 22:10:42,716 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:10:42,791 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-25 22:10:42,791 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-25 22:10:42,869 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-25 22:10:42,940 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-25 22:10:42,941 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:10:43,047 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-25 22:10:43,150 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-25 22:10:43,236 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-25 22:10:43,331 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-25 22:10:43,409 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-25 22:10:43,494 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-25 22:10:43,597 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-25 22:10:43,679 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-25 22:10:43,752 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-25 22:10:43,824 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-25 22:10:43,904 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-25 22:10:43,981 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-25 22:10:44,082 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-25 22:10:44,267 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-25 22:10:44,350 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-25 22:10:44,429 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-25 22:10:44,503 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-25 22:10:44,503 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-25 22:10:44,583 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-25 22:10:44,656 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-25 22:10:44,738 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-25 22:10:44,738 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-25 22:10:44,820 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-25 22:10:44,897 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-25 22:10:44,897 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-25 22:10:44,969 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-25 22:10:44,969 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-25 22:10:45,045 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-25 22:10:45,125 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:22:12,221 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:22:12,221 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:22:12,315 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:22:12,315 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:22:12,393 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:22:12,455 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:22:12,581 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:22:12,581 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:22:12,674 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:22:12,674 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:22:12,752 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:22:12,752 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:22:12,956 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-26 21:22:13,067 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:22:13,145 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:22:13,223 - [test_recharge.py-->line:64] - ERROR: 用例----[不输入金额]----执行失败
2022-05-26 21:22:13,223 - [test_recharge.py-->line:65] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2022-05-26 21:22:13,301 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:22:13,301 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:22:13,380 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:22:13,380 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:22:13,454 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:22:13,548 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:22:13,548 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:22:13,657 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:22:13,770 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:22:13,864 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:22:13,942 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:22:14,020 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:22:14,098 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:22:14,233 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:22:14,296 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:22:14,374 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:22:14,462 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:22:14,526 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:22:14,604 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:22:14,708 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:22:14,896 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:22:14,984 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:22:15,078 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:22:15,156 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:22:15,156 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:22:15,229 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:22:15,308 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:22:15,400 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:22:15,400 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:22:15,489 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:22:15,551 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:22:15,551 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:22:15,645 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:22:15,645 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:22:15,726 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:22:15,805 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:22:59,212 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:22:59,212 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:22:59,290 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:22:59,290 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:22:59,368 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:22:59,446 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:22:59,556 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:22:59,556 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:22:59,665 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:22:59,665 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:22:59,727 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:22:59,743 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:22:59,941 - [test_recharge.py-->line:68] - INFO: 用例----[充值成功]----执行成功
2022-05-26 21:23:00,019 - [test_recharge.py-->line:68] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:23:00,113 - [test_recharge.py-->line:68] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:23:00,191 - [test_recharge.py-->line:68] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 21:23:00,269 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:23:00,269 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:23:00,347 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:23:00,347 - [test_recharge.py-->line:65] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:23:00,410 - [test_recharge.py-->line:68] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:23:00,497 - [test_recharge.py-->line:64] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:23:00,497 - [test_recharge.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:23:00,607 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:23:00,717 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:23:00,810 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:23:00,888 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:23:00,966 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:23:01,044 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:23:01,154 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:23:01,242 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:23:01,320 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:23:01,398 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:23:01,476 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:23:01,554 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:23:01,663 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:23:01,882 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:23:01,961 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:23:02,039 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:23:02,132 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:23:02,132 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:23:02,211 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:23:02,289 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:23:02,383 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:23:02,383 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:23:02,457 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:23:02,519 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:23:02,519 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:23:02,597 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:23:02,597 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:23:02,691 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:23:02,758 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:40:38,553 - [test_recharge.py-->line:82] - INFO: 用例----[充值成功]----执行成功
2022-05-26 21:40:38,843 - [test_recharge.py-->line:82] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:40:39,121 - [test_recharge.py-->line:82] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:40:39,393 - [test_recharge.py-->line:82] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 21:40:39,674 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:40:39,675 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:40:39,954 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:40:39,955 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:40:40,244 - [test_recharge.py-->line:82] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:40:40,520 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:40:40,520 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:43:02,972 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:43:02,973 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:43:03,050 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:43:03,051 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:43:03,132 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:43:03,202 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:43:03,317 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:43:03,318 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:43:03,419 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:43:03,419 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:43:03,500 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:43:03,501 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:43:04,917 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:43:04,917 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:43:05,180 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:43:05,181 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:43:05,698 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:43:05,699 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:43:05,806 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:43:05,929 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:43:06,010 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:43:06,090 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:43:06,162 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:43:06,231 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:43:06,348 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:43:06,424 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:43:06,507 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:43:06,586 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:43:06,658 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:43:06,735 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:43:06,849 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:43:07,048 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:43:07,138 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:43:07,227 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:43:07,311 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:43:07,311 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:43:07,397 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:43:07,474 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:43:07,559 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:43:07,559 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:43:07,631 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:43:07,710 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:43:07,711 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:43:07,787 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:43:07,788 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:43:07,875 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:43:07,956 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:44:27,363 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:44:27,363 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:44:27,450 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:44:27,450 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:44:27,538 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:44:27,612 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:44:27,725 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:44:27,725 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:44:27,824 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:44:27,824 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:44:27,910 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:44:27,910 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:44:28,298 - [test_recharge.py-->line:78] - ERROR: 用例----[充值成功]----执行失败
2022-05-26 21:44:28,298 - [test_recharge.py-->line:79] - ERROR: Decimal('600.00') != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.00') != '600'
2022-05-26 21:44:28,567 - [test_recharge.py-->line:78] - ERROR: 用例----[id错误]----执行失败
2022-05-26 21:44:28,567 - [test_recharge.py-->line:79] - ERROR: Decimal('0.00') != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != '600'
2022-05-26 21:44:28,842 - [test_recharge.py-->line:78] - ERROR: 用例----[不输入id]----执行失败
2022-05-26 21:44:28,843 - [test_recharge.py-->line:79] - ERROR: Decimal('0.00') != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != '600'
2022-05-26 21:44:29,391 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:44:29,391 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:44:29,666 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:44:29,667 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:44:29,932 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为非数字]----执行失败
2022-05-26 21:44:29,932 - [test_recharge.py-->line:79] - ERROR: Decimal('0.00') != 'a'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(end_amount-start_amount,params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 'a'
2022-05-26 21:44:30,201 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:44:30,202 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:44:30,317 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:44:30,435 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:44:30,510 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:44:30,590 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:44:30,667 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:44:30,740 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:44:30,852 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:44:30,937 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:44:31,005 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:44:31,085 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:44:31,165 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:44:31,245 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:44:31,349 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:44:31,545 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:44:31,635 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:44:31,716 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:44:31,804 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:44:31,804 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:44:31,882 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:44:31,957 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:44:32,041 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:44:32,042 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:44:32,121 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:44:32,206 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:44:32,206 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:44:32,282 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:44:32,282 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:44:32,372 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:44:32,452 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:46:14,695 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:46:14,695 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:46:14,769 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:46:14,770 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:46:14,858 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:46:14,930 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:46:15,036 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:46:15,036 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:46:15,137 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:46:15,137 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:46:15,217 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:46:15,217 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:46:15,643 - [test_recharge.py-->line:78] - ERROR: 用例----[充值成功]----执行失败
2022-05-26 21:46:15,644 - [test_recharge.py-->line:79] - ERROR: 600.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != '600'
2022-05-26 21:46:15,895 - [test_recharge.py-->line:78] - ERROR: 用例----[id错误]----执行失败
2022-05-26 21:46:15,895 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:46:16,143 - [test_recharge.py-->line:78] - ERROR: 用例----[不输入id]----执行失败
2022-05-26 21:46:16,144 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:46:16,658 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:46:16,659 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:46:16,908 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:46:16,908 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:46:17,163 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为非数字]----执行失败
2022-05-26 21:46:17,163 - [test_recharge.py-->line:79] - ERROR: 0.0 != 'a'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != 'a'
2022-05-26 21:46:17,433 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:46:17,433 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:46:17,551 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:46:17,657 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:46:17,729 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:46:17,816 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:46:17,896 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:46:17,977 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:46:18,092 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:46:18,175 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:46:18,253 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:46:18,339 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:46:18,416 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:46:18,489 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:46:18,601 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:46:18,794 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:46:18,881 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:46:18,962 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:46:19,044 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:46:19,044 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:46:19,119 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:46:19,202 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:46:19,286 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:46:19,286 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:46:19,362 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:46:19,439 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:46:19,439 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:46:19,519 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:46:19,519 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:46:19,595 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:46:19,675 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:46:20,908 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:46:20,908 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:46:20,989 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:46:20,989 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:46:21,064 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:46:21,136 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:46:21,241 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:46:21,241 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:46:21,342 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:46:21,342 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:46:21,416 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:46:21,416 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:46:21,794 - [test_recharge.py-->line:78] - ERROR: 用例----[充值成功]----执行失败
2022-05-26 21:46:21,794 - [test_recharge.py-->line:79] - ERROR: 600.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != '600'
2022-05-26 21:46:22,056 - [test_recharge.py-->line:78] - ERROR: 用例----[id错误]----执行失败
2022-05-26 21:46:22,057 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:46:22,334 - [test_recharge.py-->line:78] - ERROR: 用例----[不输入id]----执行失败
2022-05-26 21:46:22,334 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:46:22,850 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:46:22,850 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:46:23,101 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:46:23,101 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:46:23,364 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为非数字]----执行失败
2022-05-26 21:46:23,364 - [test_recharge.py-->line:79] - ERROR: 0.0 != 'a'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != 'a'
2022-05-26 21:46:23,625 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:46:23,625 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:46:23,738 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:46:23,840 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:46:23,927 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:46:24,006 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:46:24,089 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:46:24,161 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:46:24,281 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:46:24,359 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:46:24,440 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:46:24,522 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:46:24,607 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:46:24,688 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:46:24,789 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:46:24,976 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:46:25,059 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:46:25,152 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:46:25,232 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:46:25,232 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:46:25,317 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:46:25,396 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:46:25,481 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:46:25,481 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:46:25,572 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:46:25,653 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:46:25,653 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:46:25,731 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:46:25,731 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:46:25,817 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:46:25,890 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:48:46,560 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:48:46,560 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:48:46,651 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:48:46,651 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:48:46,738 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:48:46,813 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:48:46,918 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:48:46,918 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:48:47,030 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:48:47,030 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:48:47,118 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:48:47,118 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:48:47,517 - [test_recharge.py-->line:78] - ERROR: 用例----[充值成功]----执行失败
2022-05-26 21:48:47,517 - [test_recharge.py-->line:79] - ERROR: 600.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != '600'
2022-05-26 21:48:47,787 - [test_recharge.py-->line:78] - ERROR: 用例----[id错误]----执行失败
2022-05-26 21:48:47,787 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:48:48,061 - [test_recharge.py-->line:78] - ERROR: 用例----[不输入id]----执行失败
2022-05-26 21:48:48,061 - [test_recharge.py-->line:79] - ERROR: 0.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != '600'
2022-05-26 21:48:48,594 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:48:48,594 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:48:48,877 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:48:48,877 - [test_recharge.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:48:49,137 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为非数字]----执行失败
2022-05-26 21:48:49,138 - [test_recharge.py-->line:79] - ERROR: 0.0 != 'a'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0.0 != 'a'
2022-05-26 21:48:49,410 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:48:49,410 - [test_recharge.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:48:49,697 - [test_recharge.py-->line:78] - ERROR: 用例----[充值金额为小数点后1位]----执行失败
2022-05-26 21:48:49,697 - [test_recharge.py-->line:79] - ERROR: 600.1 != '600.1'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != '600.1'
2022-05-26 21:48:49,813 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:48:49,924 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:48:49,998 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:48:50,070 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:48:50,150 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:48:50,231 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:48:50,334 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:48:50,412 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:48:50,493 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:48:50,573 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:48:50,645 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:48:50,729 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:48:50,831 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:48:51,023 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:48:51,110 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:48:51,200 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:48:51,279 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:48:51,279 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:48:51,360 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:48:51,440 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:48:51,530 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:48:51,530 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:48:51,605 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:48:51,688 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:48:51,688 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:48:51,770 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:48:51,770 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:48:51,854 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:48:51,932 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:51:06,627 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:51:06,627 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:51:06,700 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:51:06,700 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:51:06,781 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:51:06,852 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:51:06,953 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:51:06,953 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:51:07,055 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:51:07,055 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:51:07,148 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:51:07,149 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:51:07,529 - [test_recharge.py-->line:79] - ERROR: 用例----[充值成功]----执行失败
2022-05-26 21:51:07,530 - [test_recharge.py-->line:80] - ERROR: 600.0 != '600'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 76, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.0 != '600'
2022-05-26 21:51:07,798 - [test_recharge.py-->line:83] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:51:08,062 - [test_recharge.py-->line:83] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:51:08,326 - [test_recharge.py-->line:83] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 21:51:08,590 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:51:08,590 - [test_recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:51:08,868 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:51:08,868 - [test_recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:51:09,126 - [test_recharge.py-->line:83] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:51:09,401 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:51:09,401 - [test_recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:51:09,678 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额为小数点后1位]----执行失败
2022-05-26 21:51:09,678 - [test_recharge.py-->line:80] - ERROR: 600.1 != '600.1'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 76, in test_recharge
    self.assertEqual(float(end_amount-start_amount),params['amount'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 600.1 != '600.1'
2022-05-26 21:51:09,793 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:51:09,900 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:51:09,973 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:51:10,060 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:51:10,138 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:51:10,214 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:51:10,320 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:51:10,400 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:51:10,481 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:51:10,569 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:51:10,653 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:51:10,741 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:51:10,874 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:51:11,059 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:51:11,149 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:51:11,227 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:51:11,307 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:51:11,307 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:51:11,380 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:51:11,461 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:51:11,545 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:51:11,545 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:51:11,628 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:51:11,700 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:51:11,700 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:51:11,772 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:51:11,772 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:51:11,848 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:51:11,923 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:54:08,650 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:54:08,650 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:54:08,728 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:54:08,728 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:54:08,817 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:54:08,905 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:54:09,008 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:54:09,008 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:54:09,112 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:54:09,112 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:54:09,193 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:54:09,193 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:54:09,567 - [test_recharge.py-->line:83] - INFO: 用例----[充值成功]----执行成功
2022-05-26 21:54:09,823 - [test_recharge.py-->line:83] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:54:10,075 - [test_recharge.py-->line:83] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:54:10,326 - [test_recharge.py-->line:83] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 21:54:10,575 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:54:10,576 - [test_recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:54:10,831 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:54:10,831 - [test_recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:54:11,099 - [test_recharge.py-->line:83] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:54:11,357 - [test_recharge.py-->line:79] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:54:11,357 - [test_recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:54:11,631 - [test_recharge.py-->line:83] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 21:54:11,740 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:54:11,843 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:54:11,937 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:54:12,012 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:54:12,088 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:54:12,166 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:54:12,267 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:54:12,349 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:54:12,425 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:54:12,494 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:54:12,568 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:54:12,647 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:54:12,748 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:54:12,933 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:54:13,036 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:54:13,133 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:54:13,212 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:54:13,212 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:54:13,299 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:54:13,374 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:54:13,452 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:54:13,452 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:54:13,530 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:54:13,602 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:54:13,603 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:54:13,679 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:54:13,679 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:54:13,752 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:54:13,821 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 21:57:19,394 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 21:57:19,394 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 21:57:19,471 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 21:57:19,471 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 21:57:19,549 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:57:19,628 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:57:19,734 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 21:57:19,734 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:57:19,834 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 21:57:19,834 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 21:57:19,919 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 21:57:19,919 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 21:57:20,280 - [test_recharge.py-->line:86] - INFO: 用例----[充值成功]----执行成功
2022-05-26 21:57:20,530 - [test_recharge.py-->line:86] - INFO: 用例----[id错误]----执行成功
2022-05-26 21:57:20,784 - [test_recharge.py-->line:86] - INFO: 用例----[不输入id]----执行成功
2022-05-26 21:57:21,038 - [test_recharge.py-->line:86] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 21:57:21,287 - [test_recharge.py-->line:82] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 21:57:21,287 - [test_recharge.py-->line:83] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:57:21,551 - [test_recharge.py-->line:82] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 21:57:21,551 - [test_recharge.py-->line:83] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 21:57:21,801 - [test_recharge.py-->line:86] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 21:57:22,058 - [test_recharge.py-->line:82] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 21:57:22,058 - [test_recharge.py-->line:83] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 73, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:57:22,311 - [test_recharge.py-->line:86] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 21:57:22,427 - [test_register.py-->line:58] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 21:57:22,538 - [test_register.py-->line:58] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 21:57:22,617 - [test_register.py-->line:58] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 21:57:22,696 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 21:57:22,768 - [test_register.py-->line:58] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 21:57:22,849 - [test_register.py-->line:58] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 21:57:22,966 - [test_register.py-->line:58] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 21:57:23,046 - [test_register.py-->line:58] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 21:57:23,118 - [test_register.py-->line:58] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 21:57:23,199 - [test_register.py-->line:58] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 21:57:23,272 - [test_register.py-->line:58] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 21:57:23,353 - [test_register.py-->line:58] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 21:57:23,455 - [test_register.py-->line:58] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 21:57:23,676 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 21:57:23,756 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 21:57:23,841 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 21:57:23,923 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 21:57:23,923 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 21:57:23,997 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 21:57:24,081 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 21:57:24,167 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 21:57:24,167 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 21:57:24,246 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 21:57:24,317 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 21:57:24,317 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 21:57:24,395 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 21:57:24,396 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 21:57:24,477 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 21:57:24,553 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:09:12,870 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:09:12,870 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:09:12,950 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:09:12,950 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:09:13,040 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:09:13,112 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:09:13,226 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:09:13,227 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:09:13,329 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:09:13,329 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:09:13,413 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:09:13,413 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:09:13,790 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:09:14,117 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:09:14,117 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:09:14,202 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:09:14,203 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:09:14,362 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:09:14,362 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:09:14,637 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:09:14,738 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:09:14,845 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:09:15,198 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:09:15,285 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:09:15,373 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:09:15,450 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:09:15,557 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:09:15,635 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:09:15,716 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:09:15,795 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:09:15,868 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:09:15,942 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:09:16,051 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:09:16,248 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:09:16,325 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:09:16,424 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:09:16,497 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:09:16,497 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:09:16,575 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:09:16,649 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:09:16,732 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:09:16,732 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:09:16,805 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:09:16,880 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:09:16,880 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:09:16,963 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:09:16,963 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:09:17,047 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:09:17,127 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:13:18,391 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:13:18,496 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:13:18,574 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:13:18,646 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:13:18,726 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:13:18,799 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:13:18,913 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:13:19,001 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:13:19,079 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:13:19,166 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:13:19,242 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:13:19,313 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:13:19,421 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:13:43,303 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:13:43,417 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:13:43,504 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:13:43,595 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:13:43,681 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:13:43,759 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:13:43,870 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:13:43,956 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:13:44,043 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:13:44,126 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:13:44,200 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:13:44,282 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:13:44,396 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:14:02,301 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:14:02,442 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:14:02,517 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:14:02,596 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:14:02,677 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:14:02,763 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:14:02,874 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:14:02,956 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:14:03,038 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:14:03,124 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:14:03,202 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:14:03,291 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:14:03,403 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:14:33,060 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:14:33,174 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:14:33,266 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:14:33,359 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:14:33,438 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:14:33,527 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:14:33,632 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:14:33,705 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:14:33,776 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:14:33,855 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:14:33,942 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:14:34,036 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:14:34,151 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:15:08,967 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:15:09,092 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:15:09,171 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:15:09,265 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:15:09,346 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:15:09,435 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:15:09,549 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:15:09,626 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:15:09,706 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:15:09,786 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:15:09,868 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:15:09,955 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:15:10,066 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:15:15,843 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:15:15,843 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:15:15,928 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:15:15,929 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:15:16,018 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:15:16,093 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:15:16,210 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:15:16,210 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:15:16,312 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:15:16,312 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:15:16,390 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:15:16,390 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:15:16,770 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:15:17,113 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:15:17,113 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:15:17,190 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:15:17,190 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:15:17,365 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:15:17,366 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:15:17,651 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:15:17,764 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:15:17,872 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:15:17,953 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:15:18,036 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:15:18,122 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:15:18,207 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:15:18,319 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:15:18,412 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:15:18,497 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:15:18,578 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:15:18,653 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:15:18,729 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:15:18,849 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:15:19,039 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:15:19,130 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:15:19,226 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:15:19,307 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:15:19,308 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:15:19,397 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:15:19,484 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:15:19,576 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:15:19,577 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:15:19,652 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:15:19,729 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:15:19,729 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:15:19,820 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:15:19,820 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:15:19,902 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:15:19,994 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:15:28,541 - [test_register.py-->line:66] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:15:28,656 - [test_register.py-->line:66] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:15:28,741 - [test_register.py-->line:66] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:15:28,834 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:15:28,918 - [test_register.py-->line:66] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:15:29,005 - [test_register.py-->line:66] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:15:29,115 - [test_register.py-->line:66] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:15:29,199 - [test_register.py-->line:66] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:15:29,291 - [test_register.py-->line:66] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:15:29,371 - [test_register.py-->line:66] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:15:29,453 - [test_register.py-->line:66] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:15:29,538 - [test_register.py-->line:66] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:15:29,659 - [test_register.py-->line:66] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:16:33,532 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:16:33,533 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:16:33,617 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:16:33,617 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:16:33,697 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:16:33,775 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:16:33,894 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:16:33,894 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:16:34,000 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:16:34,000 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:16:34,074 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:16:34,075 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:16:34,453 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:16:34,748 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:16:34,748 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:16:34,835 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:16:34,836 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:16:34,999 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:16:35,000 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:16:35,297 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:16:35,422 - [test_register.py-->line:61] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-26 22:16:35,422 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[134 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[134 chars]ved'} != 1
2022-05-26 22:16:35,531 - [test_register.py-->line:61] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-26 22:16:35,532 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
2022-05-26 22:16:35,606 - [test_register.py-->line:61] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:16:35,606 - [test_register.py-->line:63] - ERROR: {'code': 1, 'msg': '手机号为空', 'data': None,[71 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 1, 'msg': '手机号为空', 'data': None,[71 chars]ved'} != 1
2022-05-26 22:16:35,699 - [test_register.py-->line:61] - ERROR: 用例-----[手机号长度10位]-----执行失败
2022-05-26 22:16:35,699 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:16:35,781 - [test_register.py-->line:61] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-26 22:16:35,781 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:16:35,860 - [test_register.py-->line:61] - ERROR: 用例-----[手机号含有非法字符]-----执行失败
2022-05-26 22:16:35,860 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:16:35,961 - [test_register.py-->line:61] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-26 22:16:35,961 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '账号已存在', 'data': None,[71 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '账号已存在', 'data': None,[71 chars]ved'} != 1
2022-05-26 22:16:36,035 - [test_register.py-->line:61] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:16:36,035 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
2022-05-26 22:16:36,115 - [test_register.py-->line:61] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:16:36,116 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
2022-05-26 22:16:36,197 - [test_register.py-->line:61] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:16:36,197 - [test_register.py-->line:63] - ERROR: {'code': 1, 'msg': '密码为空', 'data': None, [70 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 1, 'msg': '密码为空', 'data': None, [70 chars]ved'} != 1
2022-05-26 22:16:36,279 - [test_register.py-->line:61] - ERROR: 用例-----[用户名11位]-----执行失败
2022-05-26 22:16:36,279 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '用户昵称长度超过10位', 'data':[77 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '用户昵称长度超过10位', 'data':[77 chars]ved'} != 1
2022-05-26 22:16:36,356 - [test_register.py-->line:61] - ERROR: 用例-----[类型输入非0，1内容]-----执行失败
2022-05-26 22:16:36,356 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '不支持的用户类型', 'data': No[74 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '不支持的用户类型', 'data': No[74 chars]ved'} != 1
2022-05-26 22:16:36,471 - [test_register.py-->line:61] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-26 22:16:36,471 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
2022-05-26 22:16:36,668 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:16:36,749 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:16:36,833 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:16:36,908 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:16:36,908 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:16:36,986 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:16:37,068 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:16:37,146 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:16:37,146 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:16:37,225 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:16:37,295 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:16:37,295 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:16:37,378 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:16:37,378 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:16:37,461 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:16:37,538 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:17:19,681 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:17:19,682 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:17:19,756 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:17:19,756 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:17:19,834 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:17:19,903 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:17:20,012 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:17:20,012 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:17:20,111 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:17:20,111 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:17:20,190 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:17:20,191 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:17:20,545 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:17:20,902 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:17:20,902 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:17:20,991 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:17:20,992 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:17:21,152 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:17:21,152 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:17:21,412 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:17:21,516 - [test_register.py-->line:61] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-05-26 22:17:21,516 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[134 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[134 chars]ved'} != 1
2022-05-26 22:17:21,618 - [test_register.py-->line:61] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-05-26 22:17:21,618 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
2022-05-26 22:17:21,693 - [test_register.py-->line:61] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:17:21,693 - [test_register.py-->line:63] - ERROR: {'code': 1, 'msg': '手机号为空', 'data': None,[71 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 1, 'msg': '手机号为空', 'data': None,[71 chars]ved'} != 1
2022-05-26 22:17:21,762 - [test_register.py-->line:61] - ERROR: 用例-----[手机号长度10位]-----执行失败
2022-05-26 22:17:21,762 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:17:21,837 - [test_register.py-->line:61] - ERROR: 用例-----[手机号长度12位]-----执行失败
2022-05-26 22:17:21,837 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:17:21,909 - [test_register.py-->line:61] - ERROR: 用例-----[手机号含有非法字符]-----执行失败
2022-05-26 22:17:21,910 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '无效的手机格式', 'data': Non[73 chars]ved'} != 1
2022-05-26 22:17:22,007 - [test_register.py-->line:61] - ERROR: 用例-----[已注册过的手机号]-----执行失败
2022-05-26 22:17:22,008 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '账号已存在', 'data': None,[71 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '账号已存在', 'data': None,[71 chars]ved'} != 1
2022-05-26 22:17:22,082 - [test_register.py-->line:61] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:17:22,082 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
2022-05-26 22:17:22,159 - [test_register.py-->line:61] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:17:22,160 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '密码格式为8到16位', 'data': [76 chars]ved'} != 1
2022-05-26 22:17:22,238 - [test_register.py-->line:61] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:17:22,238 - [test_register.py-->line:63] - ERROR: {'code': 1, 'msg': '密码为空', 'data': None, [70 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 1, 'msg': '密码为空', 'data': None, [70 chars]ved'} != 1
2022-05-26 22:17:22,325 - [test_register.py-->line:61] - ERROR: 用例-----[用户名11位]-----执行失败
2022-05-26 22:17:22,325 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '用户昵称长度超过10位', 'data':[77 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '用户昵称长度超过10位', 'data':[77 chars]ved'} != 1
2022-05-26 22:17:22,407 - [test_register.py-->line:61] - ERROR: 用例-----[类型输入非0，1内容]-----执行失败
2022-05-26 22:17:22,407 - [test_register.py-->line:63] - ERROR: {'code': 2, 'msg': '不支持的用户类型', 'data': No[74 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '不支持的用户类型', 'data': No[74 chars]ved'} != 1
2022-05-26 22:17:22,512 - [test_register.py-->line:61] - ERROR: 用例-----[不输入类型]-----执行失败
2022-05-26 22:17:22,513 - [test_register.py-->line:63] - ERROR: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_register.py", line 57, in test_register
    self.assertEqual(res,1)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK', 'data': {'id': 2[128 chars]ved'} != 1
2022-05-26 22:17:22,719 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:17:22,809 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:17:22,904 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:17:22,986 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:17:22,986 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:17:23,057 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:17:23,135 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:17:23,213 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:17:23,213 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:17:23,292 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:17:23,378 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:17:23,378 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:17:23,459 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:17:23,459 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:17:23,537 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:17:23,620 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:18:58,621 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:18:58,621 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:18:58,699 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:18:58,699 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:18:58,789 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:18:58,864 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:18:58,980 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:18:58,980 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:18:59,086 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:18:59,086 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:18:59,165 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:18:59,165 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:18:59,542 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:18:59,861 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:18:59,862 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:18:59,952 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:18:59,952 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:19:00,117 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:19:00,118 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:19:00,393 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:19:01,745 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:19:01,830 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:19:01,916 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:19:01,996 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:19:01,996 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:19:02,079 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:19:02,153 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:19:02,244 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:19:02,245 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:19:02,320 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:19:02,400 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:19:02,400 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:19:02,484 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:19:02,484 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:19:02,565 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:19:02,645 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:21:10,168 - [test_register.py-->line:68] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:21:10,287 - [test_register.py-->line:68] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:21:10,362 - [test_register.py-->line:68] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:21:10,434 - [test_register.py-->line:68] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:21:10,516 - [test_register.py-->line:68] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:21:10,597 - [test_register.py-->line:68] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:21:10,703 - [test_register.py-->line:68] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:21:10,774 - [test_register.py-->line:68] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:21:10,861 - [test_register.py-->line:68] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:21:10,940 - [test_register.py-->line:68] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:21:11,018 - [test_register.py-->line:68] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:21:11,091 - [test_register.py-->line:68] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:21:11,199 - [test_register.py-->line:68] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:21:21,170 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:21:21,170 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:21:21,257 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:21:21,258 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:21:21,345 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:21:21,427 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:21:21,536 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:21:21,536 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:21:21,642 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:21:21,642 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:21:21,712 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:21:21,712 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:21:22,081 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:21:22,389 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:21:22,389 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:21:22,472 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:21:22,473 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:21:22,617 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:21:22,617 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:21:22,895 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:21:23,006 - [test_register.py-->line:68] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:21:23,106 - [test_register.py-->line:68] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:21:23,184 - [test_register.py-->line:68] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:21:23,266 - [test_register.py-->line:68] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:21:23,344 - [test_register.py-->line:68] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:21:23,421 - [test_register.py-->line:68] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:21:23,518 - [test_register.py-->line:68] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:21:23,595 - [test_register.py-->line:68] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:21:23,676 - [test_register.py-->line:68] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:21:23,753 - [test_register.py-->line:68] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:21:23,837 - [test_register.py-->line:68] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:21:23,926 - [test_register.py-->line:68] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:21:24,031 - [test_register.py-->line:68] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:21:24,209 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:21:24,290 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:21:24,378 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:21:24,458 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:21:24,458 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:21:24,548 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:21:24,622 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:21:24,708 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:21:24,708 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:21:24,790 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:21:24,872 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:21:24,872 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:21:24,949 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:21:24,950 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:21:25,022 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:21:25,104 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:23:14,099 - [test_register.py-->line:67] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:23:14,308 - [test_register.py-->line:67] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:23:14,483 - [test_register.py-->line:67] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:23:14,648 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:23:14,810 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:23:14,979 - [test_register.py-->line:67] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:23:15,173 - [test_register.py-->line:67] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:23:15,340 - [test_register.py-->line:67] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:23:15,514 - [test_register.py-->line:67] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:23:15,679 - [test_register.py-->line:67] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:23:15,839 - [test_register.py-->line:67] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:23:15,999 - [test_register.py-->line:67] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:23:16,203 - [test_register.py-->line:67] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:24:14,305 - [test_register.py-->line:67] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:24:17,229 - [test_register.py-->line:67] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:24:17,412 - [test_register.py-->line:67] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:24:17,582 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:24:17,750 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:24:17,930 - [test_register.py-->line:67] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:24:18,127 - [test_register.py-->line:67] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:24:18,310 - [test_register.py-->line:67] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:24:18,481 - [test_register.py-->line:67] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:24:18,644 - [test_register.py-->line:67] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:24:18,823 - [test_register.py-->line:67] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:24:18,992 - [test_register.py-->line:67] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:24:22,026 - [test_register.py-->line:67] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:24:39,070 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:24:39,070 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:24:39,160 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:24:39,160 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:24:39,242 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:24:39,329 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:24:39,429 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:24:39,429 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:24:39,539 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:24:39,540 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:24:39,610 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:24:39,610 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:24:40,003 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:24:40,324 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:24:40,324 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:24:40,400 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:24:40,401 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:24:40,581 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:24:40,581 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:24:40,849 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:24:41,057 - [test_register.py-->line:67] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:24:41,260 - [test_register.py-->line:67] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:24:41,422 - [test_register.py-->line:67] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:24:41,596 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:24:41,763 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:24:41,932 - [test_register.py-->line:67] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:24:42,125 - [test_register.py-->line:67] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:24:42,296 - [test_register.py-->line:67] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:24:42,474 - [test_register.py-->line:67] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:24:42,660 - [test_register.py-->line:67] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:24:42,840 - [test_register.py-->line:67] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:24:43,009 - [test_register.py-->line:67] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:24:43,220 - [test_register.py-->line:67] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:24:43,421 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:24:43,515 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:24:43,604 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:24:43,691 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:24:43,691 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:24:43,770 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:24:43,855 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:24:43,940 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:24:43,941 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:24:44,033 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:24:44,108 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:24:44,108 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:24:44,185 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:24:44,185 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:24:44,272 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:24:44,348 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:25:40,856 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:25:41,195 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:25:41,195 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:25:41,273 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:25:41,273 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:25:41,436 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:25:41,436 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:25:41,717 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:25:52,911 - [test_login2.py-->line:32] - ERROR: 用例-----[登录成功]-----执行失败
2022-05-26 22:25:52,911 - [test_login2.py-->line:34] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2022-05-26 22:25:52,992 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-05-26 22:25:52,992 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-05-26 22:25:53,070 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:25:53,144 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:25:53,254 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-05-26 22:25:53,254 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:25:53,361 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-05-26 22:25:53,361 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-05-26 22:25:53,451 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-05-26 22:25:53,452 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-05-26 22:25:53,844 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:25:54,132 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:25:54,132 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:25:54,215 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:25:54,216 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:25:54,382 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:25:54,383 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 75, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:25:54,672 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:25:54,860 - [test_register.py-->line:67] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:25:55,066 - [test_register.py-->line:67] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:25:55,229 - [test_register.py-->line:67] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:25:55,389 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:25:55,554 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:25:55,715 - [test_register.py-->line:67] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:25:55,906 - [test_register.py-->line:67] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:25:56,059 - [test_register.py-->line:67] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:25:56,228 - [test_register.py-->line:67] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:25:56,382 - [test_register.py-->line:67] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:25:56,546 - [test_register.py-->line:67] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:25:56,702 - [test_register.py-->line:67] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:25:56,905 - [test_register.py-->line:67] - INFO: 用例-----[不输入类型]-----执行通过
2022-05-26 22:25:57,088 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功]----执行成功
2022-05-26 22:25:57,188 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-05-26 22:25:57,274 - [test_withdraw.py-->line:68] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-05-26 22:25:57,360 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现成功-50万]----执行失败
2022-05-26 22:25:57,360 - [test_withdraw.py-->line:65] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-05-26 22:25:57,442 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为空]----执行成功
2022-05-26 22:25:57,516 - [test_withdraw.py-->line:68] - INFO: 用例----[会员id为小数]----执行成功
2022-05-26 22:25:57,598 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为0]----执行失败
2022-05-26 22:25:57,598 - [test_withdraw.py-->line:65] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-05-26 22:25:57,674 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额为负数]----执行成功
2022-05-26 22:25:57,753 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额为空]----执行失败
2022-05-26 22:25:57,753 - [test_withdraw.py-->line:65] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-05-26 22:25:57,843 - [test_withdraw.py-->line:64] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-05-26 22:25:57,844 - [test_withdraw.py-->line:65] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:25:57,926 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-05-26 22:25:57,999 - [test_withdraw.py-->line:68] - INFO: 用例----[体现金额-非数字]----执行成功
2022-05-26 22:29:06,841 - [test_recharge.py-->line:88] - INFO: 用例----[充值成功]----执行成功
2022-05-26 22:29:07,122 - [test_recharge.py-->line:88] - INFO: 用例----[id错误]----执行成功
2022-05-26 22:29:07,397 - [test_recharge.py-->line:88] - INFO: 用例----[不输入id]----执行成功
2022-05-26 22:29:07,675 - [test_recharge.py-->line:88] - INFO: 用例----[不输入金额]----执行成功
2022-05-26 22:29:07,933 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为负数]----执行失败
2022-05-26 22:29:07,933 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 74, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:29:08,188 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-05-26 22:29:08,189 - [test_recharge.py-->line:85] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 74, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-05-26 22:29:08,446 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为非数字]----执行成功
2022-05-26 22:29:08,705 - [test_recharge.py-->line:84] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-05-26 22:29:08,706 - [test_recharge.py-->line:85] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 74, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-05-26 22:29:09,003 - [test_recharge.py-->line:88] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-05-26 22:29:16,143 - [test_register.py-->line:67] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-05-26 22:29:16,358 - [test_register.py-->line:67] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-05-26 22:29:16,537 - [test_register.py-->line:67] - INFO: 用例-----[不输入手机号]-----执行通过
2022-05-26 22:29:16,699 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-05-26 22:29:16,876 - [test_register.py-->line:67] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-05-26 22:29:17,053 - [test_register.py-->line:67] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-05-26 22:29:17,249 - [test_register.py-->line:67] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-05-26 22:29:17,413 - [test_register.py-->line:67] - INFO: 用例-----[密码7位]-----执行通过
2022-05-26 22:29:17,579 - [test_register.py-->line:67] - INFO: 用例-----[密码17位]-----执行通过
2022-05-26 22:29:17,752 - [test_register.py-->line:67] - INFO: 用例-----[不输入密码]-----执行通过
2022-05-26 22:29:17,920 - [test_register.py-->line:67] - INFO: 用例-----[用户名11位]-----执行通过
2022-05-26 22:29:18,100 - [test_register.py-->line:67] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-05-26 22:29:18,299 - [test_register.py-->line:67] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-01 22:22:56,274 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-01 22:22:56,544 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-01 22:22:56,808 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-01 22:22:57,082 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-01 22:22:57,364 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-01 22:22:57,364 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-01 22:22:57,634 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-01 22:22:57,634 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-01 22:22:57,895 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-01 22:22:58,159 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-01 22:22:58,159 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-01 22:22:58,442 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-01 22:24:32,898 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-01 22:24:32,985 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-01 22:24:33,072 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-01 22:24:33,155 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-01 22:24:33,155 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-01 22:24:33,245 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-01 22:24:33,330 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-01 22:24:33,416 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-01 22:24:33,416 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-01 22:24:33,491 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-01 22:24:33,566 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-01 22:24:33,566 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-01 22:24:33,653 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-01 22:24:33,653 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-01 22:24:33,742 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-01 22:24:33,814 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-01 22:29:29,369 - [test_register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 22:29:29,548 - [test_register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:29:29,742 - [test_register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:29:29,915 - [test_register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:29:30,138 - [test_register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 22:29:30,324 - [test_register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 22:29:30,498 - [test_register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 22:29:30,670 - [test_register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 22:29:30,864 - [test_register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 22:29:31,035 - [test_register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 22:30:50,458 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 22:30:50,644 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:30:50,825 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:30:51,005 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:30:51,175 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 22:30:51,348 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 22:30:51,519 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 22:30:51,712 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 22:30:51,895 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 22:30:52,071 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 22:31:06,039 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 22:31:06,208 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:31:06,381 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:31:06,554 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:31:06,722 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 22:31:06,883 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 22:31:07,051 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 22:31:07,229 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 22:31:07,408 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 22:31:07,587 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 22:32:51,671 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-01 22:32:51,864 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-01 22:32:52,020 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 22:32:52,184 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:32:52,341 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:32:52,511 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:32:52,714 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 22:32:52,871 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 22:32:53,033 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 22:32:53,189 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 22:32:53,345 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 22:32:53,499 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 22:32:53,702 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-01 22:32:59,837 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-01 22:33:00,055 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-01 22:33:00,228 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 22:33:00,411 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:33:00,577 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:33:00,748 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:33:00,954 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 22:33:01,137 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 22:33:01,309 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 22:33:01,480 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 22:33:01,660 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 22:33:01,829 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 22:33:02,042 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-01 22:38:28,215 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:38:28,215 - [test_login2.py-->line:34] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 30, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:38:28,296 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:38:28,373 - [test_login2.py-->line:37] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:38:28,481 - [test_login2.py-->line:32] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:38:28,481 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:38:28,588 - [test_login2.py-->line:32] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:38:28,588 - [test_login2.py-->line:34] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:38:28,674 - [test_login2.py-->line:32] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:38:28,674 - [test_login2.py-->line:34] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 29, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:39:06,756 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:39:06,756 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:39:06,846 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:39:06,921 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:39:07,014 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:39:07,014 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:39:07,103 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:39:07,103 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:39:07,176 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:39:07,176 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:41:35,735 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:41:35,735 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:41:35,809 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:41:35,886 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:41:36,006 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:41:36,006 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:41:36,113 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:41:36,113 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:41:36,193 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:41:36,193 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:42:57,988 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-01 22:42:58,065 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:42:58,065 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:42:58,147 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:42:58,219 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:42:58,330 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:42:58,330 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:42:58,436 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:42:58,437 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:42:58,530 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:42:58,530 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:44:10,374 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-01 22:44:10,450 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:44:10,451 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:44:10,522 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:44:10,593 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:44:10,707 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:44:10,707 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:44:10,820 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:44:10,820 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:44:10,906 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:44:10,906 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:44:10,981 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-01 22:44:10,982 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-01 22:45:03,404 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-01 22:45:03,485 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:45:03,486 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:45:03,574 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:45:03,652 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:45:03,724 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:45:03,804 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:45:03,804 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:45:03,881 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:45:03,881 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:45:03,968 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:45:03,968 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:45:04,046 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-01 22:45:04,047 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-01 22:47:10,120 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:47:10,120 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:47:10,205 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:47:10,287 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:47:10,365 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:47:10,443 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:47:10,443 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:47:10,524 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:47:10,524 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:47:10,610 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:47:10,610 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:47:10,689 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-01 22:47:10,690 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-01 22:47:26,297 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-01 22:47:26,378 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 22:47:26,378 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 22:47:26,452 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 22:47:26,525 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 22:47:26,606 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 22:47:26,683 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 22:47:26,684 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:47:26,756 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 22:47:26,757 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 22:47:26,837 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 22:47:26,837 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 22:47:26,909 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-01 22:47:26,909 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-01 23:03:43,059 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-01 23:03:43,136 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-01 23:03:43,136 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-01 23:03:43,214 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 23:03:43,293 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 23:03:43,378 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 23:03:43,453 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-01 23:03:43,453 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 23:03:43,537 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-01 23:03:43,538 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-01 23:03:43,613 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-01 23:03:43,613 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-01 23:03:43,700 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-01 23:03:43,700 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-01 23:03:44,036 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-01 23:03:44,292 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-01 23:03:44,549 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-01 23:03:44,805 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-01 23:03:45,080 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-01 23:03:45,080 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-01 23:03:45,337 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-01 23:03:45,338 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-01 23:03:45,592 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-01 23:03:45,849 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-01 23:03:45,850 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-01 23:03:46,108 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-01 23:03:46,318 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-01 23:03:46,538 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-01 23:03:46,707 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-01 23:03:46,888 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-01 23:03:47,061 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-01 23:03:47,239 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-01 23:03:47,451 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-01 23:03:47,628 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-01 23:03:47,810 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-01 23:03:47,978 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-01 23:03:48,149 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-01 23:03:48,316 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-01 23:03:48,533 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-01 23:03:48,735 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-01 23:03:48,817 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-01 23:03:48,906 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-01 23:03:48,986 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-01 23:03:48,986 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-01 23:03:49,067 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-01 23:03:49,138 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-01 23:03:49,217 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-01 23:03:49,217 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-01 23:03:49,289 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-01 23:03:49,376 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-01 23:03:49,377 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-01 23:03:49,464 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-01 23:03:49,464 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-01 23:03:49,544 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-01 23:03:49,626 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 21:18:15,390 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 21:18:15,664 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 21:18:15,920 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 21:18:16,192 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 21:18:16,449 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 21:18:16,449 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:18:16,720 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 21:18:16,720 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:18:16,994 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 21:18:17,256 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 21:18:17,257 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 21:18:17,532 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 21:39:46,722 - [test_add.py-->line:56] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:39:46,801 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-1位小数]----执行成功
2022-06-02 21:39:46,881 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-2位小数]----执行成功
2022-06-02 21:39:46,959 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-50万]----执行成功
2022-06-02 21:39:47,045 - [test_add.py-->line:56] - ERROR: 用例----[会员id为空]----执行成功
2022-06-02 21:39:47,136 - [test_add.py-->line:56] - ERROR: 用例----[会员id为小数]----执行成功
2022-06-02 21:39:47,230 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 21:39:47,230 - [test_add.py-->line:53] - ERROR: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK

2022-06-02 21:39:47,311 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为负数]----执行失败
2022-06-02 21:39:47,311 - [test_add.py-->line:53] - ERROR: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空

2022-06-02 21:39:47,406 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 21:39:47,406 - [test_add.py-->line:53] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:39:47,496 - [test_add.py-->line:56] - ERROR: 用例----[体现金额-3位小数]----执行成功
2022-06-02 21:39:47,575 - [test_add.py-->line:52] - ERROR: 用例----[体现金额-大于50万]----执行失败
2022-06-02 21:39:47,575 - [test_add.py-->line:53] - ERROR: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天

2022-06-02 21:40:23,554 - [test_add.py-->line:56] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:40:23,640 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-1位小数]----执行成功
2022-06-02 21:40:23,730 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-2位小数]----执行成功
2022-06-02 21:40:23,812 - [test_add.py-->line:56] - ERROR: 用例----[体现成功-50万]----执行成功
2022-06-02 21:40:23,890 - [test_add.py-->line:56] - ERROR: 用例----[会员id为空]----执行成功
2022-06-02 21:40:23,969 - [test_add.py-->line:56] - ERROR: 用例----[会员id为小数]----执行成功
2022-06-02 21:40:24,053 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 21:40:24,053 - [test_add.py-->line:53] - ERROR: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK

2022-06-02 21:40:24,135 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为负数]----执行失败
2022-06-02 21:40:24,135 - [test_add.py-->line:53] - ERROR: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空

2022-06-02 21:40:24,208 - [test_add.py-->line:52] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 21:40:24,208 - [test_add.py-->line:53] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:40:24,291 - [test_add.py-->line:56] - ERROR: 用例----[体现金额-3位小数]----执行成功
2022-06-02 21:40:24,371 - [test_add.py-->line:52] - ERROR: 用例----[体现金额-大于50万]----执行失败
2022-06-02 21:40:24,371 - [test_add.py-->line:53] - ERROR: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天

2022-06-02 21:42:53,386 - [test_add.py-->line:56] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:42:53,455 - [test_add.py-->line:56] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 21:42:53,535 - [test_add.py-->line:56] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 21:42:53,611 - [test_add.py-->line:56] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 21:42:53,697 - [test_add.py-->line:56] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 21:42:53,770 - [test_add.py-->line:56] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 21:42:53,857 - [test_add.py-->line:52] - ERROR: 用例----[借款日期类型为空]----执行失败
2022-06-02 21:42:53,857 - [test_add.py-->line:53] - ERROR: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款日期类型为空' != 'OK'
- 借款日期类型为空
+ OK

2022-06-02 21:42:53,942 - [test_add.py-->line:52] - ERROR: 用例----[竞标期限为空]----执行失败
2022-06-02 21:42:53,942 - [test_add.py-->line:53] - ERROR: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '竞标期限为空' != '借款日期类型为空'
- 竞标期限为空
+ 借款日期类型为空

2022-06-02 21:42:54,017 - [test_add.py-->line:52] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 21:42:54,017 - [test_add.py-->line:53] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:42:54,089 - [test_add.py-->line:56] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 21:42:54,175 - [test_add.py-->line:52] - ERROR: 用例----[借款金额范围错误]----执行失败
2022-06-02 21:42:54,176 - [test_add.py-->line:53] - ERROR: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款金额范围错误' != '竞标期限为1-10天'
- 借款金额范围错误
+ 竞标期限为1-10天

2022-06-02 21:42:54,255 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-02 21:42:54,332 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-02 21:42:54,332 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-02 21:42:54,416 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 21:42:54,489 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 21:42:54,566 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 21:42:54,679 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-02 21:42:54,679 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 21:42:54,789 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-02 21:42:54,790 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 21:42:54,871 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-02 21:42:54,871 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-02 21:42:54,951 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-02 21:42:54,951 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-02 21:42:55,327 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 21:42:55,610 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 21:42:55,883 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 21:42:56,154 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 21:42:56,432 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 21:42:56,432 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:42:56,722 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 21:42:56,723 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:42:57,005 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 21:42:57,292 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 21:42:57,292 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 21:42:57,581 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 21:42:57,785 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-02 21:42:57,987 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-02 21:42:58,151 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-02 21:42:58,328 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 21:42:58,495 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 21:42:58,663 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 21:42:58,868 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-02 21:42:59,025 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-02 21:42:59,190 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-02 21:42:59,357 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-02 21:42:59,515 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-02 21:42:59,686 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-02 21:42:59,891 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-02 21:43:00,097 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-02 21:43:00,190 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-02 21:43:00,269 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-02 21:43:00,353 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-02 21:43:00,353 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-02 21:43:00,444 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-02 21:43:00,521 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-02 21:43:00,607 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 21:43:00,607 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-02 21:43:00,687 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-02 21:43:00,759 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 21:43:00,759 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-02 21:43:00,843 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-02 21:43:00,844 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 21:43:00,932 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-02 21:43:01,011 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 21:48:06,717 - [test_add.py-->line:56] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:48:06,802 - [test_add.py-->line:56] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 21:48:06,883 - [test_add.py-->line:56] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 21:48:06,952 - [test_add.py-->line:56] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 21:48:07,030 - [test_add.py-->line:56] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 21:48:07,109 - [test_add.py-->line:56] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 21:48:07,191 - [test_add.py-->line:52] - ERROR: 用例----[借款日期类型为空]----执行失败
2022-06-02 21:48:07,191 - [test_add.py-->line:53] - ERROR: '借款日期类型为空' != '借款期限为空'
- 借款日期类型为空
?   - ^^
+ 借款期限为空
?    ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '借款日期类型为空' != '借款期限为空'
- 借款日期类型为空
?   - ^^
+ 借款期限为空
?    ^

2022-06-02 21:48:07,278 - [test_add.py-->line:56] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 21:48:07,361 - [test_add.py-->line:52] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 21:48:07,361 - [test_add.py-->line:53] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:48:07,454 - [test_add.py-->line:56] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 21:48:07,538 - [test_add.py-->line:56] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 21:50:59,158 - [test_add.py-->line:56] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:50:59,238 - [test_add.py-->line:56] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 21:50:59,308 - [test_add.py-->line:56] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 21:50:59,387 - [test_add.py-->line:56] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 21:50:59,464 - [test_add.py-->line:56] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 21:50:59,549 - [test_add.py-->line:56] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 21:50:59,622 - [test_add.py-->line:56] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 21:50:59,703 - [test_add.py-->line:56] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 21:50:59,778 - [test_add.py-->line:52] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 21:50:59,778 - [test_add.py-->line:53] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 49, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:50:59,850 - [test_add.py-->line:56] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 21:50:59,937 - [test_add.py-->line:56] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 21:51:00,011 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-02 21:51:00,088 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-02 21:51:00,088 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-02 21:51:00,160 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 21:51:00,232 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 21:51:00,309 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 21:51:00,441 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-02 21:51:00,441 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 21:51:00,552 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-02 21:51:00,553 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 21:51:00,635 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-02 21:51:00,635 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-02 21:51:00,714 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-02 21:51:00,714 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-02 21:51:01,074 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 21:51:01,339 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 21:51:01,594 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 21:51:01,849 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 21:51:02,122 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 21:51:02,122 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:51:02,393 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 21:51:02,393 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 21:51:02,664 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 21:51:02,926 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 21:51:02,926 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 21:51:03,199 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 21:51:03,415 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-02 21:51:03,642 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-02 21:51:03,814 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-02 21:51:03,994 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 21:51:04,174 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 21:51:04,352 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 21:51:04,566 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-02 21:51:04,746 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-02 21:51:04,918 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-02 21:51:05,096 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-02 21:51:05,276 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-02 21:51:05,459 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-02 21:51:05,685 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-02 21:51:05,871 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-02 21:51:05,961 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-02 21:51:06,047 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-02 21:51:06,129 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-02 21:51:06,129 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-02 21:51:06,203 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-02 21:51:06,275 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-02 21:51:06,363 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 21:51:06,363 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-02 21:51:06,438 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-02 21:51:06,517 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 21:51:06,517 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-02 21:51:06,597 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-02 21:51:06,597 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 21:51:06,675 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-02 21:51:06,763 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 21:59:09,156 - [test_add.py-->line:65] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 21:59:09,386 - [test_add.py-->line:61] - ERROR: 用例----[用户id为空]----执行失败
2022-06-02 21:59:09,386 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:09,609 - [test_add.py-->line:61] - ERROR: 用例----[标题为空]----执行失败
2022-06-02 21:59:09,609 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:09,830 - [test_add.py-->line:61] - ERROR: 用例----[借款金额为空]----执行失败
2022-06-02 21:59:09,830 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:10,059 - [test_add.py-->line:61] - ERROR: 用例----[利率为空]----执行失败
2022-06-02 21:59:10,059 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:10,275 - [test_add.py-->line:61] - ERROR: 用例----[借款期限为空]----执行失败
2022-06-02 21:59:10,275 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:10,515 - [test_add.py-->line:61] - ERROR: 用例----[借款日期类型为空]----执行失败
2022-06-02 21:59:10,515 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:10,731 - [test_add.py-->line:61] - ERROR: 用例----[竞标期限为空]----执行失败
2022-06-02 21:59:10,731 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:10,959 - [test_add.py-->line:61] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 21:59:10,959 - [test_add.py-->line:62] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 57, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 21:59:11,197 - [test_add.py-->line:61] - ERROR: 用例----[借款金额范围错误]----执行失败
2022-06-02 21:59:11,197 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 21:59:11,422 - [test_add.py-->line:61] - ERROR: 用例----[借款金额范围错误]----执行失败
2022-06-02 21:59:11,422 - [test_add.py-->line:62] - ERROR: 0 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 59, in test_add
    self.assertEqual((end_count-start_count),1)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2022-06-02 22:00:27,489 - [test_add.py-->line:66] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 22:00:27,736 - [test_add.py-->line:66] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 22:00:27,991 - [test_add.py-->line:66] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 22:00:28,241 - [test_add.py-->line:66] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 22:00:28,495 - [test_add.py-->line:66] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 22:00:28,739 - [test_add.py-->line:66] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 22:00:28,977 - [test_add.py-->line:66] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 22:00:29,223 - [test_add.py-->line:66] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 22:00:29,476 - [test_add.py-->line:62] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 22:00:29,476 - [test_add.py-->line:63] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 57, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 22:00:29,745 - [test_add.py-->line:66] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 22:00:29,988 - [test_add.py-->line:66] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 22:00:47,793 - [test_add.py-->line:66] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 22:00:48,036 - [test_add.py-->line:66] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 22:00:48,274 - [test_add.py-->line:66] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 22:00:48,505 - [test_add.py-->line:66] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 22:00:48,749 - [test_add.py-->line:66] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 22:00:48,994 - [test_add.py-->line:66] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 22:00:49,237 - [test_add.py-->line:66] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 22:00:49,477 - [test_add.py-->line:66] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 22:00:49,708 - [test_add.py-->line:62] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 22:00:49,709 - [test_add.py-->line:63] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 22:00:49,944 - [test_add.py-->line:66] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 22:00:50,194 - [test_add.py-->line:66] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 22:01:49,556 - [test_add.py-->line:67] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 22:01:49,806 - [test_add.py-->line:67] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 22:01:50,057 - [test_add.py-->line:67] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 22:01:50,309 - [test_add.py-->line:67] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 22:01:50,560 - [test_add.py-->line:67] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 22:01:50,802 - [test_add.py-->line:67] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 22:01:51,051 - [test_add.py-->line:67] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 22:01:51,290 - [test_add.py-->line:67] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 22:01:51,543 - [test_add.py-->line:63] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 22:01:51,544 - [test_add.py-->line:64] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 22:01:51,790 - [test_add.py-->line:67] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 22:01:52,031 - [test_add.py-->line:67] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:15:09,400 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:15:09,566 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:15:09,750 - [test_audit.py-->line:103] - ERROR: 用例----[审核不待审核状态]----执行失败
2022-06-02 23:15:09,750 - [test_audit.py-->line:104] - ERROR: '项目不再审核中状态' != 'approved_or_not只能为true或者false'
- 项目不再审核中状态
+ approved_or_not只能为true或者false
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 100, in test_audit
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '项目不再审核中状态' != 'approved_or_not只能为true或者false'
- 项目不再审核中状态
+ approved_or_not只能为true或者false

2022-06-02 23:15:09,910 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:15:10,088 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:15:10,251 - [test_audit.py-->line:103] - ERROR: 用例----[项目id不存在]----执行失败
2022-06-02 23:15:10,251 - [test_audit.py-->line:104] - ERROR: '项目id不存在' != '数值格式异常'
- 项目id不存在
+ 数值格式异常
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 100, in test_audit
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '项目id不存在' != '数值格式异常'
- 项目id不存在
+ 数值格式异常

2022-06-02 23:16:31,817 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:16:31,994 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:16:32,167 - [test_audit.py-->line:103] - ERROR: 用例----[审核不待审核状态]----执行失败
2022-06-02 23:16:32,167 - [test_audit.py-->line:104] - ERROR: '项目不再审核中状态' != '项目不在审核中状态'
- 项目不再审核中状态
?    ^
+ 项目不在审核中状态
?    ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 100, in test_audit
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '项目不再审核中状态' != '项目不在审核中状态'
- 项目不再审核中状态
?    ^
+ 项目不在审核中状态
?    ^

2022-06-02 23:16:32,331 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:16:32,499 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:16:32,665 - [test_audit.py-->line:107] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:17:00,070 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:17:00,235 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:17:00,396 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:17:00,559 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:17:00,726 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:17:00,901 - [test_audit.py-->line:107] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:17:17,653 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 23:17:17,895 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 23:17:18,142 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 23:17:18,392 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 23:17:18,630 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 23:17:18,879 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 23:17:19,122 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 23:17:19,361 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 23:17:19,602 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 23:17:19,603 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 23:17:19,845 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:17:20,085 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:17:20,413 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:17:20,573 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:17:20,737 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:17:20,900 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:17:21,049 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:17:21,220 - [test_audit.py-->line:107] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:17:21,310 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-02 23:17:21,390 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-02 23:17:21,390 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-02 23:17:21,467 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:17:21,547 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:17:21,626 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:17:21,739 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-02 23:17:21,739 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:17:21,844 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-02 23:17:21,844 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:17:21,925 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-02 23:17:21,925 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-02 23:17:22,004 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-02 23:17:22,004 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-02 23:17:22,379 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 23:17:22,642 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 23:17:22,908 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 23:17:23,181 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 23:17:23,465 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 23:17:23,465 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:17:23,736 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 23:17:23,736 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:17:24,009 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 23:17:24,278 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 23:17:24,279 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:17:24,548 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 23:17:24,780 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-02 23:17:24,995 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-02 23:17:25,169 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-02 23:17:25,355 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:17:25,528 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:17:25,699 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:17:25,914 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-02 23:17:26,085 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-02 23:17:26,257 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-02 23:17:26,428 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-02 23:17:26,611 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-02 23:17:26,789 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-02 23:17:27,005 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-02 23:17:27,213 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-02 23:17:27,300 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-02 23:17:27,386 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-02 23:17:27,466 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-02 23:17:27,466 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-02 23:17:27,544 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-02 23:17:27,632 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-02 23:17:27,723 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 23:17:27,723 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-02 23:17:27,804 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-02 23:17:27,890 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 23:17:27,890 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-02 23:17:27,969 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-02 23:17:27,969 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:17:28,048 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-02 23:17:28,117 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 23:18:25,625 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:18:30,281 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:18:38,918 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:18:47,498 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:18:50,119 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:19:24,633 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:19:24,801 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:19:24,966 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:19:25,131 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:19:25,298 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:20:15,799 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:20:15,959 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:20:16,123 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:20:16,282 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:20:16,450 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:20:16,610 - [test_audit.py-->line:103] - ERROR: 用例----[项目id不存在]----执行失败
2022-06-02 23:20:16,610 - [test_audit.py-->line:104] - ERROR: '数值格式异常' != '项目不存在'
- 数值格式异常
+ 项目不存在
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 100, in test_audit
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值格式异常' != '项目不存在'
- 数值格式异常
+ 项目不存在

2022-06-02 23:21:39,827 - [test_audit.py-->line:107] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:21:44,100 - [test_audit.py-->line:107] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:21:50,625 - [test_audit.py-->line:107] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:21:54,492 - [test_audit.py-->line:107] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:21:56,673 - [test_audit.py-->line:107] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:32:54,360 - [test_audit.py-->line:115] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:32:54,593 - [test_audit.py-->line:115] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:32:54,752 - [test_audit.py-->line:115] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:32:54,921 - [test_audit.py-->line:115] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:32:55,088 - [test_audit.py-->line:115] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:32:55,258 - [test_audit.py-->line:115] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:33:12,394 - [test_audit.py-->line:115] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:33:12,634 - [test_audit.py-->line:115] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:33:12,797 - [test_audit.py-->line:115] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:33:12,967 - [test_audit.py-->line:115] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:33:13,128 - [test_audit.py-->line:115] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:33:13,298 - [test_audit.py-->line:115] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:34:02,605 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 23:34:02,827 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 23:34:03,093 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 23:34:03,347 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 23:34:03,633 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 23:34:03,917 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 23:34:04,177 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 23:34:04,444 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 23:34:04,678 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 23:34:04,678 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 23:34:04,897 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:34:05,123 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:34:05,512 - [test_audit.py-->line:112] - ERROR: 用例----[审核通过]----执行失败
2022-06-02 23:34:05,512 - [test_audit.py-->line:113] - ERROR: '2' != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 109, in test_audit
    self.assertEqual(expected['status'],status)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '2' != 2
2022-06-02 23:34:05,767 - [test_audit.py-->line:112] - ERROR: 用例----[审核不通过]----执行失败
2022-06-02 23:34:05,768 - [test_audit.py-->line:113] - ERROR: '5' != 5
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 109, in test_audit
    self.assertEqual(expected['status'],status)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '5' != 5
2022-06-02 23:34:06,512 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-02 23:34:06,597 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-02 23:34:06,597 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-02 23:34:06,676 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:34:06,760 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:34:06,839 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:34:06,954 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-02 23:34:06,954 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:34:07,064 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-02 23:34:07,064 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:34:07,143 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-02 23:34:07,143 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-02 23:34:07,228 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-02 23:34:07,228 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-02 23:34:07,569 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 23:34:07,836 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 23:34:08,102 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 23:34:08,374 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 23:34:08,637 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 23:34:08,638 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:34:08,903 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 23:34:08,903 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:34:09,169 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 23:34:09,438 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 23:34:09,439 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:34:09,709 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 23:34:09,932 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-02 23:34:10,148 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-02 23:34:10,335 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-02 23:34:10,503 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:34:10,683 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:34:10,867 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:34:11,086 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-02 23:34:11,273 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-02 23:34:11,450 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-02 23:34:11,632 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-02 23:34:11,812 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-02 23:34:11,991 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-02 23:34:12,202 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-02 23:34:12,428 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-02 23:34:12,522 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-02 23:34:12,615 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-02 23:34:12,703 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-02 23:34:12,703 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-02 23:34:12,775 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-02 23:34:12,851 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-02 23:34:12,936 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 23:34:12,936 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-02 23:34:13,017 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-02 23:34:13,094 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 23:34:13,095 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-02 23:34:13,173 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-02 23:34:13,173 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:34:13,244 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-02 23:34:13,323 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 23:34:56,357 - [test_audit.py-->line:112] - ERROR: 用例----[审核通过]----执行失败
2022-06-02 23:34:56,358 - [test_audit.py-->line:113] - ERROR: '2' != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 109, in test_audit
    self.assertEqual(expected['status'],status)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '2' != 2
2022-06-02 23:34:56,603 - [test_audit.py-->line:112] - ERROR: 用例----[审核不通过]----执行失败
2022-06-02 23:34:56,603 - [test_audit.py-->line:113] - ERROR: '5' != 5
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_audit.py", line 109, in test_audit
    self.assertEqual(expected['status'],status)
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '5' != 5
2022-06-02 23:35:13,535 - [test_audit.py-->line:116] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:35:13,798 - [test_audit.py-->line:116] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:36:26,991 - [test_audit.py-->line:116] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:36:27,220 - [test_audit.py-->line:116] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:36:27,379 - [test_audit.py-->line:116] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:36:27,560 - [test_audit.py-->line:116] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:36:27,730 - [test_audit.py-->line:116] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:36:27,905 - [test_audit.py-->line:116] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:36:35,360 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-02 23:36:35,660 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-02 23:36:35,978 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-02 23:36:36,282 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-02 23:36:36,525 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-02 23:36:36,773 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-02 23:36:37,010 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-02 23:36:37,246 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-02 23:36:37,484 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-02 23:36:37,484 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-02 23:36:37,728 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:36:37,967 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-02 23:36:38,387 - [test_audit.py-->line:116] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:36:38,631 - [test_audit.py-->line:116] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:36:38,790 - [test_audit.py-->line:116] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:36:38,960 - [test_audit.py-->line:116] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:36:39,132 - [test_audit.py-->line:116] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:36:39,299 - [test_audit.py-->line:116] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:36:39,371 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-02 23:36:39,448 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-02 23:36:39,448 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-02 23:36:39,527 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:36:39,607 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:36:39,691 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:36:39,806 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-02 23:36:39,806 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:36:39,913 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-02 23:36:39,913 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-02 23:36:40,002 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-02 23:36:40,002 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-02 23:36:40,086 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-02 23:36:40,086 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-02 23:36:40,445 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-02 23:36:40,715 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-02 23:36:40,992 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-02 23:36:41,266 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-02 23:36:41,530 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-02 23:36:41,530 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:36:41,798 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-02 23:36:41,799 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-02 23:36:42,070 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-02 23:36:42,346 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-02 23:36:42,346 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:36:42,628 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-02 23:36:42,850 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-02 23:36:43,066 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-02 23:36:43,237 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-02 23:36:43,409 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-02 23:36:43,591 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-02 23:36:43,766 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-02 23:36:43,983 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-02 23:36:44,157 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-02 23:36:44,339 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-02 23:36:44,504 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-02 23:36:44,675 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-02 23:36:44,840 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-02 23:36:45,068 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-02 23:36:45,256 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-02 23:36:45,344 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-02 23:36:45,424 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-02 23:36:45,509 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-02 23:36:45,509 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-02 23:36:45,590 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-02 23:36:45,668 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-02 23:36:45,760 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-02 23:36:45,760 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-02 23:36:45,837 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-02 23:36:45,923 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-02 23:36:45,923 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-02 23:36:46,001 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-02 23:36:46,001 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-02 23:36:46,081 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-02 23:36:46,167 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-02 23:39:06,965 - [test_audit.py-->line:117] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:39:07,239 - [test_audit.py-->line:117] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:39:07,396 - [test_audit.py-->line:117] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:39:07,574 - [test_audit.py-->line:117] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:39:07,743 - [test_audit.py-->line:117] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:39:07,913 - [test_audit.py-->line:117] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:39:22,064 - [test_audit.py-->line:117] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:39:22,310 - [test_audit.py-->line:117] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:39:22,473 - [test_audit.py-->line:117] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:39:22,632 - [test_audit.py-->line:117] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:39:22,796 - [test_audit.py-->line:117] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:39:22,956 - [test_audit.py-->line:117] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:44:07,273 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:44:07,519 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:44:07,693 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:44:07,858 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:44:08,032 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:44:08,201 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:48:08,000 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:48:08,246 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:48:08,406 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:48:08,574 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:48:08,740 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:48:08,905 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:51:19,816 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:51:20,068 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:51:20,235 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:51:20,395 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:51:20,562 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:51:20,738 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:51:59,697 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:51:59,951 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:52:00,119 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:52:00,284 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:52:00,447 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:52:00,606 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:52:27,207 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:52:27,468 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:52:27,629 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:52:27,794 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:52:27,960 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:52:28,124 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:52:50,654 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:52:50,896 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:52:51,067 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:52:51,235 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:52:51,400 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:52:51,572 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-02 23:53:21,007 - [test_audit.py-->line:119] - ERROR: 用例----[审核通过]----执行成功
2022-06-02 23:53:21,251 - [test_audit.py-->line:119] - ERROR: 用例----[审核不通过]----执行成功
2022-06-02 23:53:21,420 - [test_audit.py-->line:119] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-02 23:53:21,596 - [test_audit.py-->line:119] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-02 23:53:21,768 - [test_audit.py-->line:119] - ERROR: 用例----[项目id为空]----执行成功
2022-06-02 23:53:21,931 - [test_audit.py-->line:119] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 22:24:55,598 - [test _invest.py-->line:48] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-06 22:24:55,599 - [test _invest.py-->line:49] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2022-06-06 22:24:55,678 - [test _invest.py-->line:48] - ERROR: 用例----[投资人id为空]----执行失败
2022-06-06 22:24:55,678 - [test _invest.py-->line:49] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2022-06-06 22:24:55,765 - [test _invest.py-->line:48] - ERROR: 用例----[标id为空]----执行失败
2022-06-06 22:24:55,766 - [test _invest.py-->line:49] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2022-06-06 22:24:55,851 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:24:55,851 - [test _invest.py-->line:49] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2022-06-06 22:24:55,928 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:24:55,928 - [test _invest.py-->line:49] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2022-06-06 22:24:56,012 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:24:56,012 - [test _invest.py-->line:49] - ERROR: 2 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004
2022-06-06 22:24:56,102 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:24:56,103 - [test _invest.py-->line:49] - ERROR: 1002 != 1004
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 1004
2022-06-06 22:30:47,275 - [test _invest.py-->line:48] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-06 22:30:47,275 - [test _invest.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-06-06 22:30:47,362 - [test _invest.py-->line:52] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:30:47,438 - [test _invest.py-->line:52] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:30:47,514 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:30:47,514 - [test _invest.py-->line:49] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 46, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:30:47,598 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:30:47,598 - [test _invest.py-->line:49] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 46, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2022-06-06 22:30:47,679 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:30:47,680 - [test _invest.py-->line:49] - ERROR: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 46, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态

2022-06-06 22:30:47,767 - [test _invest.py-->line:48] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:30:47,767 - [test _invest.py-->line:49] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 45, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:31:20,105 - [test _invest.py-->line:50] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-06 22:31:20,106 - [test _invest.py-->line:51] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-06-06 22:31:20,196 - [test _invest.py-->line:54] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:31:20,277 - [test _invest.py-->line:54] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:31:20,363 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:31:20,363 - [test _invest.py-->line:51] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:31:20,436 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:31:20,437 - [test _invest.py-->line:51] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2022-06-06 22:31:20,522 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:31:20,522 - [test _invest.py-->line:51] - ERROR: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态

2022-06-06 22:31:20,614 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:31:20,614 - [test _invest.py-->line:51] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:33:52,918 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 22:33:53,288 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 22:33:53,656 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 22:33:53,973 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 22:33:54,239 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 22:33:54,506 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 22:33:54,767 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 22:33:55,056 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 22:33:55,319 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 22:33:55,319 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 22:33:55,581 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:33:55,848 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:33:56,315 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 22:33:56,567 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 22:33:56,748 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 22:33:56,903 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 22:33:57,060 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 22:33:57,244 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 22:33:57,323 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 22:33:57,413 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 22:33:57,413 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 22:33:57,491 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:33:57,577 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:33:57,663 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:33:57,782 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 22:33:57,782 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:33:57,900 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 22:33:57,900 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:33:57,979 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 22:33:57,979 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 22:33:58,069 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 22:33:58,069 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 22:33:58,470 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 22:33:58,747 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 22:33:59,033 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 22:33:59,334 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 22:33:59,630 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 22:33:59,630 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:33:59,922 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 22:33:59,922 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:34:00,208 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 22:34:00,486 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 22:34:00,486 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:34:00,779 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 22:34:00,992 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 22:34:01,216 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 22:34:01,386 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 22:34:01,560 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:34:01,742 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:34:01,917 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:34:02,135 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 22:34:02,310 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 22:34:02,489 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 22:34:02,668 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 22:34:02,851 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 22:34:03,027 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 22:34:03,249 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 22:34:03,451 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:34:03,541 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:34:03,630 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:34:03,714 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:34:03,715 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:34:03,806 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:34:03,891 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:34:03,976 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:34:03,976 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:34:04,071 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:34:04,158 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:34:04,158 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:34:04,237 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:34:04,237 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:34:04,317 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:34:04,398 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:36:27,314 - [test _invest.py-->line:50] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-06 22:36:27,314 - [test _invest.py-->line:51] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2022-06-06 22:36:27,397 - [test _invest.py-->line:54] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:36:27,490 - [test _invest.py-->line:54] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:36:27,563 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:36:27,563 - [test _invest.py-->line:51] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:36:27,639 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:36:27,639 - [test _invest.py-->line:51] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2022-06-06 22:36:27,716 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:36:27,716 - [test _invest.py-->line:51] - ERROR: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该项目不在竞标中状态'
- 该标可投金额不足
+ 该项目不在竞标中状态

2022-06-06 22:36:27,809 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:36:27,809 - [test _invest.py-->line:51] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:40:03,524 - [test _invest.py-->line:54] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-06 22:40:03,613 - [test _invest.py-->line:54] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:40:03,684 - [test _invest.py-->line:54] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:40:03,771 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:40:03,771 - [test _invest.py-->line:51] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:40:03,854 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:40:03,854 - [test _invest.py-->line:51] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2022-06-06 22:40:03,934 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:40:03,934 - [test _invest.py-->line:51] - ERROR: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0

2022-06-06 22:40:04,016 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:40:04,016 - [test _invest.py-->line:51] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:41:30,341 - [test _invest.py-->line:54] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-06 22:41:30,415 - [test _invest.py-->line:54] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:41:30,501 - [test _invest.py-->line:54] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:41:30,571 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:41:30,572 - [test _invest.py-->line:51] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:41:30,661 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:41:30,661 - [test _invest.py-->line:51] - ERROR: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' != '充值金额必须大于100，并且可以被100整除'
- 投资金额必须大于100，并且可以被100整除
? ^^
+ 充值金额必须大于100，并且可以被100整除
? ^^

2022-06-06 22:41:30,754 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额大于可投金额]----执行失败
2022-06-06 22:41:30,754 - [test _invest.py-->line:51] - ERROR: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 48, in test_invest
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该标可投金额不足,可投金额：1700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：1700.0

2022-06-06 22:41:30,848 - [test _invest.py-->line:50] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:41:30,848 - [test _invest.py-->line:51] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:43:53,155 - [test _invest.py-->line:55] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-06 22:43:53,233 - [test _invest.py-->line:55] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:43:53,311 - [test _invest.py-->line:55] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:43:53,393 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:43:53,393 - [test _invest.py-->line:52] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 49, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-06 22:43:53,472 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:43:53,473 - [test _invest.py-->line:52] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 49, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-06 22:43:53,562 - [test _invest.py-->line:55] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-06 22:43:53,654 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:43:53,654 - [test _invest.py-->line:52] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2022-06-06 22:48:46,703 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:48:46,795 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:48:46,884 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:48:46,965 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:48:46,965 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:48:47,048 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:48:47,127 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:48:47,224 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:48:47,225 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:48:47,317 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:48:47,390 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:48:47,390 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:48:47,475 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:48:47,475 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:48:47,549 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:48:47,621 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:49:56,112 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:49:56,194 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:49:56,286 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:49:56,361 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:49:56,361 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:49:56,442 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:49:56,531 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:49:56,619 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:49:56,619 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:49:56,707 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:49:56,788 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:49:56,788 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:49:56,879 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:49:56,879 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:49:56,960 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:49:57,049 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:50:46,024 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-06 22:50:46,024 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:50:46,117 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:50:46,205 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:50:46,287 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:50:46,288 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:50:46,358 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:50:46,447 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:50:46,535 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:50:46,535 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:50:46,627 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:50:46,712 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:50:46,712 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:50:46,791 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:50:46,792 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:50:46,871 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:50:46,951 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:51:11,582 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 22:51:11,844 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 22:51:12,114 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 22:51:12,381 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 22:51:12,656 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 22:51:12,656 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:51:12,924 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 22:51:12,924 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:51:13,195 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 22:51:13,464 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 22:51:13,464 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:51:13,747 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 22:52:11,405 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:52:11,492 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:52:11,585 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:52:11,665 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:52:11,665 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:52:11,738 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:52:11,816 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:52:11,914 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:52:11,914 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:52:11,997 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:52:12,071 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:52:12,072 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:52:12,152 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:52:12,152 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:52:12,234 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:52:12,304 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:53:13,501 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:53:13,590 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:53:13,673 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-06 22:53:13,673 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:53:13,767 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:53:13,767 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:53:13,842 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:53:13,927 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:53:14,020 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:53:14,020 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:53:14,108 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:53:14,188 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:53:14,188 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:53:14,276 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:53:14,276 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:53:14,364 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:53:14,441 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:53:55,450 - [test _invest.py-->line:55] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-06 22:53:55,531 - [test _invest.py-->line:55] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-06 22:53:55,618 - [test _invest.py-->line:55] - ERROR: 用例----[标id为空]----执行成功
2022-06-06 22:53:55,691 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-06 22:53:55,691 - [test _invest.py-->line:52] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 49, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-06 22:53:55,775 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-06 22:53:55,775 - [test _invest.py-->line:52] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 49, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-06 22:53:55,860 - [test _invest.py-->line:55] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-06 22:53:55,962 - [test _invest.py-->line:51] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-06 22:53:55,962 - [test _invest.py-->line:52] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test _invest.py", line 47, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-06 22:54:49,015 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 22:54:49,275 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 22:54:49,526 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 22:54:49,773 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 22:54:50,022 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 22:54:50,262 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 22:54:50,518 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 22:54:50,767 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 22:54:51,022 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 22:54:51,022 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 22:54:51,277 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:54:51,535 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:54:51,956 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 22:54:52,203 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 22:54:52,385 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 22:54:52,557 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 22:54:52,728 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 22:54:52,886 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 22:54:52,965 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 22:54:53,050 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 22:54:53,050 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 22:54:53,123 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:54:53,202 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:54:53,281 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:54:53,400 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 22:54:53,400 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:54:53,514 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 22:54:53,514 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:54:53,591 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 22:54:53,591 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 22:54:53,677 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 22:54:53,678 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 22:54:54,058 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 22:54:54,349 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 22:54:54,634 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 22:54:54,920 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 22:54:55,203 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 22:54:55,203 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:54:55,493 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 22:54:55,493 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:54:55,785 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 22:54:56,071 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 22:54:56,071 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:54:56,359 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 22:54:56,572 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 22:54:56,786 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 22:54:56,950 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 22:54:57,122 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:54:57,289 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:54:57,446 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:54:57,650 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 22:54:57,824 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 22:54:57,990 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 22:54:58,164 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 22:54:58,332 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 22:54:58,497 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 22:54:58,713 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 22:54:58,916 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:54:58,995 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-06 22:54:58,995 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:54:59,081 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-06 22:54:59,082 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:54:59,169 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:54:59,169 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:54:59,247 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:54:59,325 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:54:59,409 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:54:59,409 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:54:59,488 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:54:59,574 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:54:59,574 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:54:59,660 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:54:59,660 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:54:59,738 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:54:59,825 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:55:53,811 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-06 22:55:53,811 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:55:53,889 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-06 22:55:53,889 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:55:53,969 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-06 22:55:53,970 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:55:54,050 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:55:54,050 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:55:54,141 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:55:54,214 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:55:54,306 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:55:54,306 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:55:54,388 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:55:54,462 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:55:54,462 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:55:54,536 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:55:54,537 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:55:54,624 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:55:54,701 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:56:58,726 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 22:56:58,975 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 22:56:59,230 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 22:56:59,489 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 22:56:59,742 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 22:56:59,995 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 22:57:00,239 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 22:57:00,502 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 22:57:00,756 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 22:57:00,756 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 22:57:01,016 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:57:01,280 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:57:01,736 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 22:57:01,994 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 22:57:02,151 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 22:57:02,316 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 22:57:02,490 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 22:57:02,665 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 22:57:02,744 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 22:57:02,816 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 22:57:02,816 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 22:57:02,895 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:57:02,973 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:57:03,049 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:57:03,162 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 22:57:03,162 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:57:03,268 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 22:57:03,268 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:57:03,348 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 22:57:03,348 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 22:57:03,434 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 22:57:03,434 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 22:57:03,786 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 22:57:04,029 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 22:57:04,286 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 22:57:04,545 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 22:57:04,814 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 22:57:04,814 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:57:05,072 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 22:57:05,072 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:57:05,335 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 22:57:05,593 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 22:57:05,593 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:57:05,862 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 22:57:06,077 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 22:57:06,311 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 22:57:06,502 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 22:57:06,696 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:57:06,883 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:57:07,075 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:57:07,296 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 22:57:07,490 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 22:57:07,666 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 22:57:07,856 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 22:57:08,030 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 22:57:08,214 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 22:57:08,442 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 22:57:08,653 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:57:08,741 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:57:08,834 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-06 22:57:08,835 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:57:08,916 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:57:08,916 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:57:09,006 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:57:09,084 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:57:09,175 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:57:09,175 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:57:09,256 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:57:09,344 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:57:09,344 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:57:09,422 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:57:09,422 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:57:09,509 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:57:09,597 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 22:59:46,019 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 22:59:46,255 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 22:59:46,490 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 22:59:46,726 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 22:59:46,986 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 22:59:47,224 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 22:59:47,462 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 22:59:47,698 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 22:59:47,939 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 22:59:47,939 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 22:59:48,171 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:59:48,410 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 22:59:48,815 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 22:59:49,070 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 22:59:49,240 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 22:59:49,407 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 22:59:49,567 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 22:59:49,752 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 22:59:49,835 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 22:59:49,920 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 22:59:49,920 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 22:59:49,998 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:59:50,070 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:59:50,164 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:59:50,290 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 22:59:50,290 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:59:50,404 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 22:59:50,404 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 22:59:50,497 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 22:59:50,497 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 22:59:50,584 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 22:59:50,584 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 22:59:50,938 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 22:59:51,199 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 22:59:51,463 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 22:59:51,710 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 22:59:51,973 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 22:59:51,974 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:59:52,232 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 22:59:52,232 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 22:59:52,506 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 22:59:52,751 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 22:59:52,752 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:59:53,022 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 22:59:53,246 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 22:59:53,483 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 22:59:53,677 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 22:59:53,863 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 22:59:54,047 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 22:59:54,243 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 22:59:54,465 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 22:59:54,657 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 22:59:54,839 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 22:59:55,031 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 22:59:55,222 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 22:59:55,415 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 22:59:55,637 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 22:59:55,852 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 22:59:55,949 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 22:59:56,036 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 22:59:56,117 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 22:59:56,117 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 22:59:56,211 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 22:59:56,290 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 22:59:56,390 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 22:59:56,390 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 22:59:56,474 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 22:59:56,551 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 22:59:56,551 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 22:59:56,638 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 22:59:56,638 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 22:59:56,726 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 22:59:56,812 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 23:00:16,328 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 23:00:16,696 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 23:00:17,039 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 23:00:17,386 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 23:00:17,762 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 23:00:18,120 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 23:00:18,866 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 23:00:19,262 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 23:00:19,661 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 23:00:19,661 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 23:00:20,023 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 23:00:20,392 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 23:00:20,861 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 23:00:21,111 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 23:00:21,292 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 23:00:21,474 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 23:00:21,643 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 23:00:21,817 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 23:00:21,909 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 23:00:21,991 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 23:00:21,991 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 23:00:22,077 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 23:00:22,157 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 23:00:22,237 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 23:00:22,352 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 23:00:22,352 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 23:00:22,474 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 23:00:22,474 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 23:00:22,558 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 23:00:22,558 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 23:00:22,640 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 23:00:22,640 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 23:00:23,009 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 23:00:23,281 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 23:00:23,559 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 23:00:23,829 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 23:00:24,119 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 23:00:24,120 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 23:00:24,397 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 23:00:24,398 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 23:00:24,682 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 23:00:24,971 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 23:00:24,971 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 23:00:25,247 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 23:00:25,453 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 23:00:25,660 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 23:00:25,840 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 23:00:26,022 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 23:00:26,185 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 23:00:26,360 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 23:00:26,565 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 23:00:26,731 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 23:00:26,901 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 23:00:27,078 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 23:00:27,267 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 23:00:27,442 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 23:00:27,656 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 23:00:27,874 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 23:00:27,963 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 23:00:28,051 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-06 23:00:28,140 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 23:00:28,140 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 23:00:28,220 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 23:00:28,299 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 23:00:28,386 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 23:00:28,386 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 23:00:28,470 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 23:00:28,551 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 23:00:28,552 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 23:00:28,643 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 23:00:28,643 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 23:00:28,726 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 23:00:28,798 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-06 23:01:05,625 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-06 23:01:05,968 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-06 23:01:06,243 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-06 23:01:06,507 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-06 23:01:06,771 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-06 23:01:07,029 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-06 23:01:07,302 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-06 23:01:07,558 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-06 23:01:07,837 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-06 23:01:07,837 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-06 23:01:08,104 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 23:01:08,369 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-06 23:01:08,826 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-06 23:01:09,066 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-06 23:01:09,241 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-06 23:01:09,426 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-06 23:01:09,591 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-06 23:01:09,759 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-06 23:01:09,838 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-06 23:01:09,917 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-06 23:01:09,917 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-06 23:01:09,988 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 23:01:10,065 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 23:01:10,149 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 23:01:10,262 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-06 23:01:10,262 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 23:01:10,366 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-06 23:01:10,366 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-06 23:01:10,447 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-06 23:01:10,448 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-06 23:01:10,533 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-06 23:01:10,534 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-06 23:01:10,917 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-06 23:01:11,190 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-06 23:01:11,470 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-06 23:01:11,746 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-06 23:01:12,010 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-06 23:01:12,010 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 23:01:12,286 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-06 23:01:12,287 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-06 23:01:12,560 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-06 23:01:12,839 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-06 23:01:12,839 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 23:01:13,129 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-06 23:01:13,342 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-06 23:01:13,553 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-06 23:01:13,727 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-06 23:01:13,885 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-06 23:01:14,062 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-06 23:01:14,239 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-06 23:01:14,455 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-06 23:01:14,626 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-06 23:01:14,791 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-06 23:01:14,966 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-06 23:01:15,134 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-06 23:01:15,311 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-06 23:01:15,518 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-06 23:01:15,736 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-06 23:01:15,825 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-06 23:01:15,912 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-06 23:01:15,912 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 23:01:15,991 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-06 23:01:15,992 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-06 23:01:16,081 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-06 23:01:16,160 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-06 23:01:16,254 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-06 23:01:16,254 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-06 23:01:16,349 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-06 23:01:16,419 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-06 23:01:16,419 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-06 23:01:16,492 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-06 23:01:16,492 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-06 23:01:16,581 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-06 23:01:16,668 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:25:22,364 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:25:22,716 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:25:23,076 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:25:23,412 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:25:23,725 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:25:24,075 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:25:24,407 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:25:24,715 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:25:25,021 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:25:25,021 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:25:25,342 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:25:25,700 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:25:26,159 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:25:26,408 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:25:26,592 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:25:26,742 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:25:26,947 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:25:27,126 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:25:27,226 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:25:27,334 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:25:27,334 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:25:27,429 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:25:27,511 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:25:27,603 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:25:27,720 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:25:27,720 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:25:27,841 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:25:27,841 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:25:27,918 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:25:27,919 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:25:28,004 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:25:28,004 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:25:28,385 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:25:28,697 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:25:28,982 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:25:29,276 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:25:29,561 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:25:29,561 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:25:29,864 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:25:29,864 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:25:30,175 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:25:30,475 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:25:30,475 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:25:30,760 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:25:30,978 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:25:31,194 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:25:31,376 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:25:31,555 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:25:31,732 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:25:31,907 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:25:32,116 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:25:32,293 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:25:32,477 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:25:32,672 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:25:32,853 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:25:33,034 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:25:33,256 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:25:33,452 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:25:33,544 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-07 21:25:33,642 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-07 21:25:33,732 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:25:33,732 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:25:33,841 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:25:33,926 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:25:34,014 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:25:34,014 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:25:34,087 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:25:34,159 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:25:34,159 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:25:34,246 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:25:34,247 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:25:34,333 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:25:34,414 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:26:19,248 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:26:19,503 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:26:19,768 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:26:20,031 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:26:20,284 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:26:20,534 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:26:20,785 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:26:21,049 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:26:21,309 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:26:21,309 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:26:21,577 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:26:21,831 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:26:22,266 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:26:22,524 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:26:22,700 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:26:22,869 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:26:23,046 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:26:23,203 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:26:23,287 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:26:23,369 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:26:23,369 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:26:23,455 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:26:23,544 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:26:23,616 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:26:23,734 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:26:23,735 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:26:23,849 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:26:23,850 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:26:23,930 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:26:23,930 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:26:24,015 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:26:24,015 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:26:24,404 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:26:24,697 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:26:24,980 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:26:25,271 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:26:25,553 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:26:25,553 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:26:25,847 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:26:25,847 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:26:26,136 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:26:26,430 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:26:26,430 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:26:26,736 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:26:26,954 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:26:27,177 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:26:27,375 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:26:27,564 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:26:27,749 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:26:27,951 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:26:28,179 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:26:28,365 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:26:28,548 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:26:28,731 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:26:28,917 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:26:29,100 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:26:29,329 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:26:29,531 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:26:29,621 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-07 21:26:29,707 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-2位小数]----执行成功
2022-06-07 21:26:29,786 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:26:29,786 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:26:29,864 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:26:29,943 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:26:30,028 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:26:30,028 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:26:30,121 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:26:30,198 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:26:30,199 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:26:30,286 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:26:30,286 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:26:30,364 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:26:30,445 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:26:58,193 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:26:58,512 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:26:58,865 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:26:59,218 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:26:59,530 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:26:59,843 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:27:00,155 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:27:00,475 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:27:00,793 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:27:00,794 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:27:01,117 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:27:01,467 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:27:01,919 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:27:02,180 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:27:02,361 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:27:02,535 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:27:02,701 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:27:02,871 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:27:03,230 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:27:03,508 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:27:03,786 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:27:04,059 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:27:04,329 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:27:04,329 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:27:04,638 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:27:04,638 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:27:04,915 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:27:05,187 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:27:05,187 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:27:05,473 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:27:05,691 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:27:05,919 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:27:06,109 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:27:06,294 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:27:06,496 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:27:06,687 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:27:06,909 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:27:07,096 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:27:07,285 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:27:07,469 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:27:07,644 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:27:07,835 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:27:08,059 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:27:08,275 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:27:08,382 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功-1位小数]----执行成功
2022-06-07 21:27:08,462 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:27:08,463 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:27:08,554 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:27:08,554 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:27:08,639 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:27:08,711 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:27:08,796 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:27:08,796 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:27:08,877 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:27:08,963 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:27:08,964 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:27:09,043 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:27:09,044 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:27:09,126 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:27:09,203 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:28:27,375 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:28:27,705 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:28:28,053 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:28:28,392 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:28:28,723 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:28:29,058 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:28:29,396 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:28:29,732 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:28:29,987 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:28:29,987 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:28:30,327 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:28:30,664 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:28:31,127 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:28:31,371 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:28:31,534 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:28:31,699 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:28:31,876 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:28:32,048 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:28:32,463 - [test_invest.py-->line:54] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 21:28:32,543 - [test_invest.py-->line:54] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:28:32,621 - [test_invest.py-->line:54] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:28:32,706 - [test_invest.py-->line:50] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:28:32,706 - [test_invest.py-->line:51] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 48, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:28:32,786 - [test_invest.py-->line:50] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:28:32,786 - [test_invest.py-->line:51] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 48, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:28:32,869 - [test_invest.py-->line:54] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:28:32,963 - [test_invest.py-->line:50] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:28:32,963 - [test_invest.py-->line:51] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 46, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:28:33,095 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:28:33,176 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:28:33,176 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:28:33,261 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:28:33,332 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:28:33,413 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:28:33,533 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:28:33,533 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:28:33,649 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:28:33,649 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:28:33,733 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:28:33,733 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:28:33,808 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:28:33,808 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:28:34,180 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:28:34,459 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:28:34,729 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:28:35,004 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:28:35,285 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:28:35,285 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:28:35,575 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:28:35,575 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:28:35,849 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:28:36,128 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:28:36,129 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:28:36,418 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:28:36,643 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:28:36,854 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:28:37,026 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:28:37,209 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:28:37,388 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:28:37,564 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:28:37,785 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:28:37,968 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:28:38,142 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:28:38,323 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:28:38,506 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:28:38,679 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:28:38,892 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:28:39,115 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:28:39,195 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:28:39,195 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:28:39,282 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:28:39,282 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:28:39,362 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:28:39,362 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:28:39,448 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:28:39,532 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:28:39,616 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:28:39,616 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:28:39,700 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:28:39,792 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:28:39,792 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:28:39,864 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:28:39,864 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:28:39,938 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:28:40,026 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:44:48,977 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:44:49,255 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:44:49,513 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:44:49,780 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:44:50,045 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:44:50,313 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:44:50,566 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:44:50,832 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:44:51,102 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:44:51,102 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:44:51,393 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:44:51,654 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:44:52,113 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:44:52,366 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:44:52,541 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:44:52,716 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:44:52,892 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:44:53,075 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:44:53,666 - [test_invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:44:53,759 - [test_invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:44:53,848 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:44:53,848 - [test_invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:44:53,927 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:44:53,927 - [test_invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:44:54,010 - [test_invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:44:54,107 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:44:54,107 - [test_invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:44:54,241 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:44:54,319 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:44:54,319 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:44:54,404 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:44:54,483 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:44:54,559 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:44:54,677 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:44:54,678 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:44:54,797 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:44:54,797 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:44:54,884 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:44:54,884 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:44:54,970 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:44:54,970 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:44:55,361 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:44:55,638 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:44:55,916 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:44:56,214 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:44:56,511 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:44:56,512 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:44:56,805 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:44:56,806 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:44:57,096 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:44:57,389 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:44:57,389 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:44:57,691 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:44:57,910 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:44:58,133 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:44:58,315 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:44:58,495 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:44:58,673 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:44:58,852 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:44:59,068 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:44:59,246 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:44:59,433 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:44:59,620 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:44:59,807 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:44:59,989 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:45:00,195 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:45:00,428 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:45:00,510 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:45:00,511 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:45:00,596 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:45:00,596 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:45:00,683 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:45:00,683 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:45:00,763 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:45:00,839 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:45:00,925 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:45:00,925 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:45:01,014 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:45:01,100 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:45:01,100 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:45:01,183 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:45:01,183 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:45:01,271 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:45:01,354 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:46:42,562 - [test_add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:46:42,882 - [test_add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:46:43,137 - [test_add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:46:43,387 - [test_add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:46:43,640 - [test_add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:46:43,894 - [test_add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:46:44,151 - [test_add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:46:44,409 - [test_add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:46:44,655 - [test_add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:46:44,655 - [test_add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:46:44,915 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:46:45,173 - [test_add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:46:45,642 - [test_audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:46:45,896 - [test_audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:46:46,062 - [test_audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:46:46,222 - [test_audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:46:46,387 - [test_audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:46:46,574 - [test_audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:46:47,153 - [test_invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:46:47,245 - [test_invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:46:47,331 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:46:47,332 - [test_invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:46:47,414 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:46:47,414 - [test_invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:46:47,495 - [test_invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:46:47,579 - [test_invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:46:47,579 - [test_invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:46:47,687 - [test_login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:46:47,767 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:46:47,767 - [test_login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:46:47,846 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:46:47,928 - [test_login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:46:48,005 - [test_login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:46:48,121 - [test_login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:46:48,121 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:46:48,242 - [test_login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:46:48,242 - [test_login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:46:48,331 - [test_login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:46:48,331 - [test_login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:46:48,411 - [test_login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:46:48,412 - [test_login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:46:48,794 - [test_recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:46:49,081 - [test_recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:46:49,369 - [test_recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:46:49,658 - [test_recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:46:49,945 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:46:49,946 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:46:50,235 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:46:50,236 - [test_recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:46:50,523 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:46:50,808 - [test_recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:46:50,808 - [test_recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:46:51,105 - [test_recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:46:51,330 - [test_register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:46:51,546 - [test_register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:46:51,729 - [test_register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:46:51,901 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:46:52,078 - [test_register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:46:52,260 - [test_register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:46:52,478 - [test_register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:46:52,654 - [test_register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:46:52,836 - [test_register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:46:53,019 - [test_register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:46:53,201 - [test_register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:46:53,379 - [test_register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:46:53,597 - [test_register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:46:53,801 - [test_withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:46:53,880 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:46:53,880 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:46:53,958 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:46:53,958 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:46:54,044 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:46:54,044 - [test_withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:46:54,130 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:46:54,210 - [test_withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:46:54,297 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:46:54,297 - [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:46:54,388 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:46:54,474 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:46:54,474 - [test_withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:46:54,554 - [test_withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:46:54,555 - [test_withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:46:54,640 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:46:54,718 - [test_withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:50:24,571 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:50:24,659 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:50:24,743 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:50:24,743 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:50:24,835 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:50:24,835 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:50:24,916 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:50:25,011 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:50:25,012 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:52:10,835 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:52:11,051 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:52:11,215 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:52:11,397 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:52:11,572 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:52:11,753 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:52:11,960 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:52:12,131 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:52:12,305 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:52:12,486 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:52:12,667 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:52:12,849 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:52:13,059 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:52:13,175 - [test_02login2.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:52:13,262 - [test_02login2.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:52:13,263 - [test_02login2.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:52:13,344 - [test_02login2.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:52:13,436 - [test_02login2.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:52:13,521 - [test_02login2.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:52:13,642 - [test_02login2.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:52:13,642 - [test_02login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:52:13,762 - [test_02login2.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:52:13,762 - [test_02login2.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:52:13,845 - [test_02login2.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:52:13,845 - [test_02login2.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login2.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:52:13,922 - [test_02login2.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:52:13,922 - [test_02login2.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login2.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:52:14,284 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:52:14,553 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:52:14,851 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:52:15,135 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:52:15,416 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:52:15,417 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:52:15,689 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:52:15,689 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:52:15,955 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:52:16,218 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:52:16,218 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:52:16,505 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:52:16,711 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:52:16,793 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:52:16,793 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:52:16,884 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:52:16,884 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:52:16,969 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:52:16,970 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:52:17,051 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:52:17,132 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:52:17,216 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:52:17,216 - [test_04withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:52:17,295 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:52:17,380 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:52:17,380 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:52:17,458 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:52:17,458 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:52:17,536 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:52:17,614 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:52:18,071 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:52:18,342 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:52:18,619 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:52:18,871 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:52:19,140 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:52:19,401 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:52:19,669 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:52:19,928 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:52:20,186 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:52:20,186 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:52:20,459 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:52:20,728 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:52:21,166 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:52:21,426 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:52:21,602 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:52:21,766 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:52:21,938 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:52:22,118 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:52:22,785 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:52:22,868 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:52:22,946 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:52:22,947 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:52:23,018 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:52:23,018 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:52:23,111 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:52:23,192 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:52:23,192 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:53:07,178 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:53:07,399 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:53:07,575 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:53:07,758 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:53:07,937 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:53:08,122 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:53:08,325 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:53:08,504 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:53:08,671 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:53:08,843 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:53:09,022 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:53:09,196 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:53:09,415 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:53:09,529 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:53:09,619 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:53:09,619 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:53:09,700 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:53:09,785 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:53:09,865 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:53:09,996 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:53:09,997 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:53:10,110 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:53:10,111 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:53:10,204 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:53:10,204 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:53:10,284 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:53:10,284 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:53:10,719 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:53:11,006 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:53:11,286 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:53:11,585 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:53:11,872 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:53:11,872 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:53:12,172 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:53:12,172 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:53:12,453 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:53:12,733 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:53:12,733 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:53:13,034 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:53:13,233 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现成功]----执行成功
2022-06-07 21:53:13,316 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:53:13,316 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:53:13,396 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:53:13,396 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:53:13,487 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:53:13,488 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:53:13,568 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:53:13,659 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:53:13,745 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:53:13,745 - [test_04withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:53:13,826 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:53:13,911 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:53:13,911 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:53:13,995 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:53:13,995 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:53:14,082 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:53:14,153 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:53:14,627 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:53:14,932 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:53:15,205 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:53:15,474 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:53:15,744 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:53:16,017 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:53:16,277 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:53:16,548 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:53:16,818 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:53:16,818 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:53:17,090 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:53:17,362 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:53:17,825 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:53:18,079 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:53:18,256 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:53:18,424 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:53:18,591 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:53:18,766 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:53:19,675 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:53:19,757 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:53:19,835 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:53:19,835 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:53:19,916 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:53:19,916 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:53:20,003 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:53:20,097 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:53:20,097 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:54:39,439 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:54:39,643 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:54:39,804 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:54:39,981 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:54:40,160 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:54:40,341 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:54:40,571 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:54:40,751 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:54:40,933 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:54:41,113 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:54:41,289 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:54:41,465 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:54:41,699 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:54:41,838 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:54:41,918 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:54:41,918 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:54:42,001 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:54:42,081 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:54:42,169 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:54:42,285 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:54:42,285 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:54:42,406 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:54:42,407 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:54:42,497 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:54:42,497 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:54:42,581 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:54:42,581 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:54:42,950 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:54:43,226 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:54:43,494 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:54:43,771 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:54:44,051 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:54:44,051 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:54:44,334 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:54:44,334 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:54:44,603 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:54:44,881 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:54:44,882 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:54:45,162 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:54:45,363 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-07 21:54:45,364 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:54:45,444 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:54:45,445 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:54:45,527 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:54:45,527 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:54:45,614 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:54:45,615 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:54:45,697 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:54:45,783 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:54:45,880 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:54:45,880 - [test_04withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-07 21:54:45,967 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:54:46,050 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:54:46,050 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:54:46,136 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:54:46,136 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:54:46,223 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:54:46,299 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:54:46,718 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:54:47,009 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:54:47,308 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:54:47,607 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:54:47,907 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:54:48,199 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:54:48,459 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:54:48,742 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:54:49,041 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:54:49,041 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:54:49,349 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:54:49,648 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:54:50,108 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:54:50,348 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:54:50,525 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:54:50,689 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:54:50,871 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:54:51,045 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:54:51,940 - [test_07invest.py-->line:73] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-07 21:54:51,941 - [test_07invest.py-->line:74] - ERROR: '300' != 300.0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 67, in test_invest
    self.assertEqual(params['amount'],float(s_amount-e_amount))
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '300' != 300.0
2022-06-07 21:54:52,024 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:54:52,098 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:54:52,182 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:54:52,182 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:54:52,268 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:54:52,268 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:54:52,363 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:54:52,462 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:54:52,462 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:55:46,645 - [test_07invest.py-->line:73] - ERROR: 用例----[投资人正常投资]----执行失败
2022-06-07 21:55:46,645 - [test_07invest.py-->line:74] - ERROR: '300' != 300
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 67, in test_invest
    self.assertEqual(params['amount'],int(s_amount-e_amount))
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '300' != 300
2022-06-07 21:55:46,733 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:55:46,820 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:55:46,896 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:55:46,896 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:55:46,974 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:55:46,974 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:55:47,059 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:55:47,149 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:55:47,149 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:56:08,671 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 21:56:08,750 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:56:08,839 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:56:08,923 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:56:08,923 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:56:09,012 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:56:09,012 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:56:09,089 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:56:09,181 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:56:09,181 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\pycharm\PyCharm Community Edition 2021.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:56:15,928 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:56:16,137 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:56:16,318 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:56:16,484 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:56:16,655 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:56:16,825 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:56:17,032 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:56:17,216 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:56:17,379 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:56:17,548 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:56:17,718 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:56:17,898 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:56:18,105 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:56:18,224 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:56:18,302 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:56:18,302 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:56:18,381 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:56:18,462 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:56:18,542 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:56:18,671 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:56:18,671 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:56:18,789 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:56:18,789 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:56:18,875 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:56:18,876 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:56:18,954 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:56:18,954 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:56:19,340 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:56:19,642 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:56:19,938 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:56:20,242 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:56:20,552 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:56:20,552 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:56:20,852 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:56:20,853 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:56:21,154 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:56:21,447 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:56:21,447 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:56:21,761 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:56:21,971 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-07 21:56:21,971 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:56:22,058 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:56:22,059 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:56:22,130 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:56:22,131 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:56:22,216 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:56:22,217 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:56:22,305 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:56:22,390 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:56:22,472 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:56:22,472 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-07 21:56:22,561 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:56:22,636 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:56:22,636 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:56:22,716 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:56:22,716 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:56:22,789 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:56:22,868 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:56:23,297 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:56:23,624 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:56:23,882 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:56:24,142 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:56:24,396 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:56:24,657 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:56:24,906 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:56:25,160 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:56:25,423 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:56:25,423 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:56:25,676 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:56:25,950 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:56:26,409 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:56:26,664 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:56:26,838 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:56:27,007 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:56:27,175 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:56:27,320 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:56:28,282 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 21:56:28,369 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:56:28,450 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:56:28,521 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:56:28,521 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:56:28,602 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:56:28,602 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:56:28,684 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:56:28,783 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:56:28,783 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 21:58:17,174 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 21:58:17,391 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 21:58:17,565 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 21:58:17,748 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:58:17,918 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:58:18,093 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:58:18,298 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 21:58:18,487 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 21:58:18,656 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 21:58:18,834 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 21:58:19,006 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 21:58:19,187 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 21:58:19,405 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 21:58:19,517 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 21:58:19,596 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 21:58:19,597 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 21:58:19,685 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 21:58:19,764 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 21:58:19,851 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 21:58:19,971 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 21:58:19,971 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:58:20,093 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 21:58:20,093 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 21:58:20,179 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 21:58:20,179 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 21:58:20,263 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 21:58:20,263 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 21:58:20,632 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 21:58:20,897 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 21:58:21,169 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 21:58:21,435 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 21:58:21,714 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 21:58:21,714 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:58:21,992 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 21:58:21,993 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 21:58:22,264 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 21:58:22,533 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 21:58:22,534 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:58:22,800 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 21:58:22,996 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-07 21:58:22,996 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:58:23,077 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 21:58:23,077 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:58:23,165 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 21:58:23,165 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:58:23,246 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 21:58:23,246 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 21:58:23,336 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 21:58:23,422 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 21:58:23,504 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 21:58:23,505 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-07 21:58:23,587 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 21:58:23,665 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 21:58:23,666 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 21:58:23,745 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 21:58:23,745 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 21:58:23,830 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 21:58:23,906 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 21:58:24,315 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 21:58:24,638 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 21:58:24,888 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 21:58:25,130 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 21:58:25,386 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 21:58:25,645 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 21:58:25,892 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 21:58:26,142 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 21:58:26,398 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 21:58:26,398 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 21:58:26,648 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:58:26,915 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 21:58:27,388 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 21:58:27,640 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 21:58:27,823 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 21:58:28,005 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 21:58:28,168 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 21:58:28,345 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 21:58:29,339 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 21:58:29,418 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 21:58:29,504 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 21:58:29,587 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 21:58:29,587 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 21:58:29,666 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 21:58:29,667 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 21:58:29,746 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 21:58:29,844 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 21:58:29,844 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 22:09:36,212 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 22:09:36,447 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 22:09:36,654 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 22:09:36,834 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 22:09:37,025 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 22:09:37,215 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 22:09:37,431 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 22:09:37,627 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 22:09:37,815 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 22:09:38,008 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 22:09:38,185 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 22:09:38,358 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 22:09:38,593 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 22:09:38,729 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 22:09:38,809 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 22:09:38,809 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 22:09:38,900 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 22:09:38,974 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 22:09:39,045 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 22:09:39,158 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 22:09:39,158 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 22:09:39,265 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 22:09:39,266 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 22:09:39,345 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 22:09:39,345 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 22:09:39,428 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 22:09:39,428 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 22:09:39,804 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 22:09:40,077 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 22:09:40,363 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 22:09:40,641 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 22:09:40,918 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 22:09:40,918 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 22:09:41,200 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 22:09:41,200 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 22:09:41,476 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 22:09:41,751 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 22:09:41,751 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 22:09:42,035 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 22:09:42,229 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-07 22:09:42,229 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:09:42,308 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 22:09:42,309 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:09:42,393 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 22:09:42,394 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:09:42,477 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 22:09:42,477 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:09:42,566 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 22:09:42,650 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 22:09:42,731 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 22:09:42,731 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-07 22:09:42,828 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 22:09:42,919 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 22:09:42,919 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 22:09:42,990 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 22:09:42,990 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 22:09:43,076 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 22:09:43,159 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 22:09:43,610 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 22:09:43,956 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 22:09:44,284 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 22:09:44,604 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 22:09:44,924 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 22:09:45,250 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 22:09:45,561 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 22:09:45,857 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 22:09:46,145 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 22:09:46,145 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 22:09:46,466 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 22:09:46,795 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 22:09:47,252 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 22:09:47,514 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 22:09:47,693 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 22:09:47,858 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 22:09:48,009 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 22:09:48,176 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 22:09:49,107 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 22:09:49,184 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 22:09:49,263 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 22:09:49,349 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 22:09:49,349 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 22:09:49,427 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 22:09:49,427 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 22:09:49,508 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 22:09:49,597 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 22:09:49,598 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-07 22:10:46,634 - [test_01register.py-->line:72] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-07 22:10:46,852 - [test_01register.py-->line:72] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-07 22:10:47,032 - [test_01register.py-->line:72] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-07 22:10:47,222 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 22:10:47,404 - [test_01register.py-->line:72] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 22:10:47,583 - [test_01register.py-->line:72] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 22:10:47,813 - [test_01register.py-->line:72] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-07 22:10:47,996 - [test_01register.py-->line:72] - INFO: 用例-----[密码7位]-----执行通过
2022-06-07 22:10:48,171 - [test_01register.py-->line:72] - INFO: 用例-----[密码17位]-----执行通过
2022-06-07 22:10:48,364 - [test_01register.py-->line:72] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-07 22:10:48,548 - [test_01register.py-->line:72] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-07 22:10:48,720 - [test_01register.py-->line:72] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-07 22:10:48,938 - [test_01register.py-->line:72] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-07 22:10:49,055 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-07 22:10:49,129 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-07 22:10:49,129 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-07 22:10:49,212 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-07 22:10:49,294 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-07 22:10:49,382 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-07 22:10:49,489 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-07 22:10:49,489 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 22:10:49,612 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-07 22:10:49,612 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-07 22:10:49,701 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-07 22:10:49,701 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-07 22:10:49,788 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-07 22:10:49,788 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-07 22:10:50,164 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-07 22:10:50,471 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-07 22:10:50,773 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-07 22:10:51,066 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-07 22:10:51,367 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-07 22:10:51,367 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 22:10:51,659 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-07 22:10:51,659 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-07 22:10:51,941 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-07 22:10:52,240 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-07 22:10:52,240 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 22:10:52,541 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-07 22:10:52,740 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-07 22:10:52,740 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:10:52,822 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-07 22:10:52,823 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:10:52,900 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-07 22:10:52,900 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:10:52,989 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-07 22:10:52,990 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-07 22:10:53,087 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-07 22:10:53,164 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-07 22:10:53,242 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-07 22:10:53,242 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-07 22:10:53,325 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-07 22:10:53,409 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-07 22:10:53,410 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-07 22:10:53,482 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-07 22:10:53,482 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-07 22:10:53,570 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-07 22:10:53,652 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-07 22:10:54,078 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-07 22:10:54,428 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-07 22:10:54,774 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-07 22:10:55,050 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-07 22:10:55,323 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-07 22:10:55,592 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-07 22:10:55,852 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-07 22:10:56,132 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-07 22:10:56,403 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-07 22:10:56,403 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-07 22:10:56,672 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 22:10:56,924 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-07 22:10:57,363 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-07 22:10:57,611 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-07 22:10:57,795 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-07 22:10:57,953 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-07 22:10:58,126 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-07 22:10:58,295 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-07 22:10:59,259 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-07 22:10:59,339 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-07 22:10:59,417 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-07 22:10:59,497 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-07 22:10:59,498 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-07 22:10:59,576 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-07 22:10:59,576 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-07 22:10:59,666 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-07 22:10:59,758 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-07 22:10:59,758 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-11 22:38:57,658 - [test_01register.py-->line:71] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-11 22:38:57,876 - [test_01register.py-->line:71] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-11 22:38:58,065 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-11 22:38:58,253 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 22:38:58,456 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 22:38:58,640 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 22:38:58,875 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-11 22:38:59,062 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-11 22:38:59,250 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-11 22:38:59,453 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-11 22:38:59,632 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-11 22:38:59,820 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-11 22:39:00,050 - [test_01register.py-->line:71] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-11 22:39:07,399 - [test_01register.py-->line:71] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-11 22:39:07,614 - [test_01register.py-->line:71] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-11 22:39:07,781 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-11 22:39:07,968 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 22:39:08,140 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 22:39:08,312 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 22:39:08,515 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-11 22:39:08,682 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-11 22:39:08,853 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-11 22:39:09,025 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-11 22:39:09,182 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-11 22:39:09,369 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-11 22:39:09,573 - [test_01register.py-->line:71] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-11 22:39:09,712 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-11 22:39:09,790 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-11 22:39:09,790 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-11 22:39:09,864 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 22:39:09,942 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 22:39:10,036 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 22:39:10,161 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-11 22:39:10,161 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 22:39:10,297 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-11 22:39:10,297 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 22:39:10,375 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-11 22:39:10,375 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-11 22:39:10,469 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-11 22:39:10,469 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-11 22:39:10,860 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-11 22:39:11,151 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-11 22:39:11,432 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-11 22:39:11,738 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-11 22:39:12,021 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-11 22:39:12,021 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-11 22:39:12,313 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-11 22:39:12,313 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-11 22:39:12,625 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-11 22:39:12,920 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-11 22:39:12,920 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-11 22:39:13,232 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-11 22:39:13,428 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-11 22:39:13,428 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-11 22:39:13,531 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-11 22:39:13,531 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-11 22:39:13,610 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-11 22:39:13,610 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-11 22:39:13,703 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-11 22:39:13,703 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-11 22:39:13,791 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-11 22:39:13,870 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-11 22:39:13,949 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-11 22:39:13,949 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-11 22:39:14,042 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-11 22:39:14,120 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-11 22:39:14,120 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-11 22:39:14,199 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-11 22:39:14,199 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-11 22:39:14,277 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-11 22:39:14,361 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-11 22:39:14,762 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-11 22:39:15,054 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-11 22:39:15,304 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-11 22:39:15,549 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-11 22:39:15,809 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-11 22:39:16,059 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-11 22:39:16,321 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-11 22:39:16,571 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-11 22:39:16,816 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-11 22:39:16,816 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 1211, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-11 22:39:17,066 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-11 22:39:17,325 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-11 22:39:17,768 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-11 22:39:18,029 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-11 22:39:18,201 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-11 22:39:18,372 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-11 22:39:18,556 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-11 22:39:18,712 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-11 22:39:19,641 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-11 22:39:19,719 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-11 22:39:19,797 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-11 22:39:19,876 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-11 22:39:19,876 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-11 22:39:19,979 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-11 22:39:19,979 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python\python语言\lib\unittest\case.py", line 1098, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\python语言\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-11 22:39:20,057 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-11 22:39:20,151 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-11 22:39:20,151 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\python语言\lib\unittest\case.py", line 831, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\python语言\lib\unittest\case.py", line 824, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-11 23:15:27,847 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-11 23:15:27,941 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-11 23:15:27,941 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-11 23:15:28,019 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 23:15:28,097 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 23:15:28,191 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 23:15:28,316 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-11 23:15:28,316 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:15:28,441 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-11 23:15:28,441 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:15:28,519 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-11 23:15:28,519 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-11 23:15:28,598 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-11 23:15:28,598 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-11 23:15:37,617 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-11 23:15:37,684 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-11 23:15:37,684 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-11 23:15:37,777 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 23:15:37,840 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 23:15:37,918 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 23:15:38,043 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-11 23:15:38,043 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:15:38,199 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-11 23:15:38,199 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:15:38,277 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-11 23:15:38,277 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-11 23:15:38,355 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-11 23:15:38,355 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-11 23:17:29,255 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-11 23:17:29,333 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-11 23:17:29,333 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-11 23:17:29,411 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-11 23:17:29,505 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-11 23:17:29,583 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-11 23:17:29,687 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-11 23:17:29,687 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:17:29,812 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-11 23:17:29,812 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-11 23:17:29,891 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-11 23:17:29,891 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-11 23:17:29,969 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-11 23:17:29,969 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "D:\python\python35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan\lib\unittest\case.py", line 1226, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 02:31:58,602 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-12 02:31:58,703 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-12 02:31:58,703 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-12 02:31:58,801 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 02:31:58,891 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 02:31:58,984 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 02:31:59,116 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-12 02:31:59,116 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:31:59,241 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-12 02:31:59,241 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:31:59,336 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-12 02:31:59,336 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-12 02:31:59,429 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-12 02:31:59,429 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 02:33:45,246 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-12 02:33:45,336 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-12 02:33:45,336 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-12 02:33:45,421 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 02:33:45,514 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 02:33:45,597 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 02:33:45,729 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-12 02:33:45,729 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:33:45,859 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-12 02:33:45,859 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:33:45,943 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-12 02:33:45,943 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-12 02:33:46,032 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-12 02:33:46,032 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 02:33:46,310 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-12 02:33:46,311 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:33:46,407 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-12 02:33:46,407 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:33:46,492 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-12 02:33:46,492 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:33:46,583 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-12 02:33:46,584 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:33:46,677 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-12 02:33:46,767 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-12 02:33:46,858 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-12 02:33:46,858 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-12 02:33:46,951 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-12 02:33:47,041 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-12 02:33:47,042 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-12 02:33:47,132 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-12 02:33:47,133 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 02:33:47,226 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-12 02:33:47,316 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-12 02:33:48,220 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-12 02:33:48,405 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-12 02:33:48,593 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-12 02:33:48,781 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-12 02:33:49,243 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-12 02:33:49,327 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-12 02:33:49,421 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-12 02:33:49,421 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-12 02:33:49,505 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-12 02:33:49,505 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-12 02:33:49,602 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-12 02:33:49,707 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-12 02:33:49,707 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-12 02:35:03,016 - [test_01register.py-->line:71] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-12 02:35:03,240 - [test_01register.py-->line:71] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-12 02:35:03,426 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-12 02:35:03,616 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 02:35:03,803 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 02:35:03,993 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 02:35:04,220 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-12 02:35:04,409 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-12 02:35:04,607 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-12 02:35:04,796 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-12 02:35:04,988 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-12 02:35:05,182 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-12 02:35:05,419 - [test_01register.py-->line:71] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-12 02:35:05,553 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-12 02:35:05,644 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-12 02:35:05,644 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-12 02:35:05,739 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 02:35:05,828 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 02:35:05,915 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 02:35:06,050 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-12 02:35:06,051 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:35:06,183 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-12 02:35:06,184 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 02:35:06,272 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-12 02:35:06,272 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-12 02:35:06,356 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-12 02:35:06,357 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 02:35:06,739 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-12 02:35:07,036 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-12 02:35:07,327 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-12 02:35:07,639 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-12 02:35:07,926 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-12 02:35:07,926 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 02:35:08,211 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-12 02:35:08,211 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 02:35:08,504 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-12 02:35:08,796 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-12 02:35:08,797 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 02:35:09,100 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-12 02:35:09,318 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-12 02:35:09,318 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:35:09,417 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-12 02:35:09,417 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:35:09,512 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-12 02:35:09,512 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:35:09,597 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-12 02:35:09,597 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 02:35:09,681 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-12 02:35:09,773 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-12 02:35:09,869 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-12 02:35:09,869 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-12 02:35:09,963 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-12 02:35:10,053 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-12 02:35:10,053 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-12 02:35:10,148 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-12 02:35:10,148 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 02:35:10,248 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-12 02:35:10,339 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-12 02:35:10,817 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-12 02:35:11,143 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-12 02:35:11,442 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-12 02:35:11,746 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-12 02:35:12,036 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-12 02:35:12,333 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-12 02:35:12,631 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-12 02:35:12,926 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-12 02:35:13,227 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-12 02:35:13,227 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-12 02:35:13,517 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 02:35:13,815 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 02:35:14,291 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-12 02:35:14,565 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-12 02:35:14,756 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-12 02:35:14,935 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-12 02:35:15,119 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-12 02:35:15,303 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-12 02:35:16,333 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-12 02:35:16,419 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-12 02:35:16,510 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-12 02:35:16,593 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-12 02:35:16,594 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-12 02:35:16,691 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-12 02:35:16,692 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-12 02:35:16,786 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-12 02:35:16,889 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-12 02:35:16,889 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-12 02:36:19,747 - [test_01register.py-->line:71] - INFO: 用例-----[注册成功-带注册名]-----执行通过
2022-06-12 02:36:19,989 - [test_01register.py-->line:71] - INFO: 用例-----[成功-不带用户名]-----执行通过
2022-06-12 02:36:20,175 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-12 02:36:20,370 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 02:36:20,561 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 02:36:20,754 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 02:36:20,991 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-12 02:36:21,190 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-12 02:36:21,391 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-12 02:36:21,584 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-12 02:36:21,781 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-12 02:36:21,975 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-12 02:36:22,214 - [test_01register.py-->line:71] - INFO: 用例-----[不输入类型]-----执行通过
2022-06-12 21:25:46,520 - [test_01register.py-->line:65] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-06-12 21:25:46,520 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:25:46,770 - [test_01register.py-->line:65] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-06-12 21:25:46,770 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:25:46,958 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-12 21:25:47,179 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 21:25:47,382 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 21:25:47,586 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 21:25:47,846 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-12 21:25:48,049 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-12 21:25:48,252 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-12 21:25:48,455 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-12 21:25:48,652 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-12 21:25:48,840 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-12 21:25:49,090 - [test_01register.py-->line:65] - ERROR: 用例-----[不输入类型]-----执行失败
2022-06-12 21:25:49,090 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:25:49,241 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-12 21:25:49,320 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-12 21:25:49,320 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-12 21:25:49,433 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 21:25:49,527 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 21:25:49,621 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 21:25:49,746 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-12 21:25:49,746 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 21:25:49,882 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-12 21:25:49,882 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 21:25:49,976 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-12 21:25:49,976 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-12 21:25:50,069 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-12 21:25:50,069 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 21:25:50,462 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-12 21:25:50,745 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-12 21:25:51,042 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-12 21:25:51,339 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-12 21:25:51,617 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-12 21:25:51,632 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 21:25:51,929 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-12 21:25:51,929 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 21:25:52,226 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-12 21:25:52,507 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-12 21:25:52,507 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 21:25:52,804 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-12 21:25:53,038 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-12 21:25:53,038 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:25:53,132 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-12 21:25:53,147 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:25:53,241 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-12 21:25:53,241 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:25:53,335 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-12 21:25:53,335 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:25:53,429 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-12 21:25:53,534 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-12 21:25:53,612 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-12 21:25:53,612 - [test_04withdraw.py-->line:68] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2022-06-12 21:25:53,706 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-12 21:25:53,800 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-12 21:25:53,800 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-12 21:25:53,894 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-12 21:25:53,894 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 21:25:53,987 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-12 21:25:54,081 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-12 21:25:54,534 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-12 21:25:54,888 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-12 21:25:55,185 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-12 21:25:55,501 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-12 21:25:55,783 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-12 21:25:56,090 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-12 21:25:56,371 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-12 21:25:56,664 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-12 21:25:56,960 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-12 21:25:56,960 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-12 21:25:57,294 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 21:25:57,576 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 21:25:58,069 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-12 21:25:58,319 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-12 21:25:58,507 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-12 21:25:58,705 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-12 21:25:58,892 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-12 21:25:59,064 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-12 21:26:00,043 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-12 21:26:00,137 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-12 21:26:00,215 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-12 21:26:00,309 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-12 21:26:00,309 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-12 21:26:00,418 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-12 21:26:00,418 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-12 21:26:00,512 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-12 21:26:00,622 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-12 21:26:00,622 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-12 21:33:57,581 - [test_01register.py-->line:65] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-06-12 21:33:57,581 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:33:57,832 - [test_01register.py-->line:65] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-06-12 21:33:57,832 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:33:58,025 - [test_01register.py-->line:71] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-12 21:33:58,242 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 21:33:58,437 - [test_01register.py-->line:71] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 21:33:58,627 - [test_01register.py-->line:71] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 21:33:58,880 - [test_01register.py-->line:71] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-12 21:33:59,068 - [test_01register.py-->line:71] - INFO: 用例-----[密码7位]-----执行通过
2022-06-12 21:33:59,259 - [test_01register.py-->line:71] - INFO: 用例-----[密码17位]-----执行通过
2022-06-12 21:33:59,446 - [test_01register.py-->line:71] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-12 21:33:59,635 - [test_01register.py-->line:71] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-12 21:33:59,859 - [test_01register.py-->line:71] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-12 21:34:00,121 - [test_01register.py-->line:65] - ERROR: 用例-----[不输入类型]-----执行失败
2022-06-12 21:34:00,121 - [test_01register.py-->line:67] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 57, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:34:00,245 - [test_02login.py-->line:40] - INFO: 用例-----[登录成功]-----执行通过
2022-06-12 21:34:00,328 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入手机号]-----执行失败
2022-06-12 21:34:00,328 - [test_02login.py-->line:37] - ERROR: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '手机号为空' != '手机号码为空'
- 手机号为空
+ 手机号码为空
?    +

2022-06-12 21:34:00,407 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 21:34:00,487 - [test_02login.py-->line:40] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 21:34:00,574 - [test_02login.py-->line:40] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 21:34:00,705 - [test_02login.py-->line:35] - ERROR: 用例-----[密码7位]-----执行失败
2022-06-12 21:34:00,705 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 21:34:00,837 - [test_02login.py-->line:35] - ERROR: 用例-----[密码17位]-----执行失败
2022-06-12 21:34:00,837 - [test_02login.py-->line:37] - ERROR: 2 != 1001
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1001
2022-06-12 21:34:00,924 - [test_02login.py-->line:35] - ERROR: 用例-----[不输入密码]-----执行失败
2022-06-12 21:34:00,924 - [test_02login.py-->line:37] - ERROR: 2 != 1
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 32, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2022-06-12 21:34:01,016 - [test_02login.py-->line:35] - ERROR: 用例-----[手机号为字符串类型]-----执行失败
2022-06-12 21:34:01,016 - [test_02login.py-->line:37] - ERROR: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_02login.py", line 33, in test_login
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '无效的手机格式'
- 类型错误
+ 无效的手机格式

2022-06-12 21:34:01,405 - [test_03recharge.py-->line:91] - INFO: 用例----[充值成功]----执行成功
2022-06-12 21:34:01,694 - [test_03recharge.py-->line:91] - INFO: 用例----[id错误]----执行成功
2022-06-12 21:34:01,980 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入id]----执行成功
2022-06-12 21:34:02,267 - [test_03recharge.py-->line:91] - INFO: 用例----[不输入金额]----执行成功
2022-06-12 21:34:02,565 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为负数]----执行失败
2022-06-12 21:34:02,565 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 21:34:02,860 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额为5000001]----执行失败
2022-06-12 21:34:02,860 - [test_03recharge.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2022-06-12 21:34:03,156 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为非数字]----执行成功
2022-06-12 21:34:03,444 - [test_03recharge.py-->line:87] - ERROR: 用例----[充值金额小数点3位]----执行失败
2022-06-12 21:34:03,444 - [test_03recharge.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_03recharge.py", line 77, in test_recharge
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 21:34:03,746 - [test_03recharge.py-->line:91] - INFO: 用例----[充值金额为小数点后1位]----执行成功
2022-06-12 21:34:03,954 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功]----执行失败
2022-06-12 21:34:03,955 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:34:04,040 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-1位小数]----执行失败
2022-06-12 21:34:04,041 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:34:04,133 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-2位小数]----执行失败
2022-06-12 21:34:04,133 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:34:04,220 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现成功-50万]----执行失败
2022-06-12 21:34:04,220 - [test_04withdraw.py-->line:68] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2022-06-12 21:34:04,296 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为空]----执行成功
2022-06-12 21:34:04,388 - [test_04withdraw.py-->line:71] - INFO: 用例----[会员id为小数]----执行成功
2022-06-12 21:34:04,493 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为0]----执行失败
2022-06-12 21:34:04,493 - [test_04withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2022-06-12 21:34:04,576 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额为负数]----执行成功
2022-06-12 21:34:04,667 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额为空]----执行失败
2022-06-12 21:34:04,667 - [test_04withdraw.py-->line:68] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2022-06-12 21:34:04,753 - [test_04withdraw.py-->line:67] - ERROR: 用例----[体现金额-3位小数]----执行失败
2022-06-12 21:34:04,753 - [test_04withdraw.py-->line:68] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['msg'], res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2022-06-12 21:34:04,845 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-大于50万]----执行成功
2022-06-12 21:34:04,932 - [test_04withdraw.py-->line:71] - INFO: 用例----[体现金额-非数字]----执行成功
2022-06-12 21:34:05,379 - [test_05add.py-->line:68] - ERROR: 用例----[加标成功]----执行成功
2022-06-12 21:34:05,680 - [test_05add.py-->line:68] - ERROR: 用例----[用户id为空]----执行成功
2022-06-12 21:34:05,957 - [test_05add.py-->line:68] - ERROR: 用例----[标题为空]----执行成功
2022-06-12 21:34:06,236 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额为空]----执行成功
2022-06-12 21:34:06,517 - [test_05add.py-->line:68] - ERROR: 用例----[利率为空]----执行成功
2022-06-12 21:34:06,799 - [test_05add.py-->line:68] - ERROR: 用例----[借款期限为空]----执行成功
2022-06-12 21:34:07,076 - [test_05add.py-->line:68] - ERROR: 用例----[借款日期类型为空]----执行成功
2022-06-12 21:34:07,343 - [test_05add.py-->line:68] - ERROR: 用例----[竞标期限为空]----执行成功
2022-06-12 21:34:07,620 - [test_05add.py-->line:64] - ERROR: 用例----[无权限访问请检查参数]----执行失败
2022-06-12 21:34:07,620 - [test_05add.py-->line:65] - ERROR: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_05add.py", line 55, in test_add
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 1233, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '无权限访问请检查参数' != 'JSON parse error: Cannot deserialize valu[364 chars]d"])'
- 无权限访问请检查参数
+ JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "295242+1": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 15] (through reference chain: com.lemon.pojo.Loan["member_id"])

2022-06-12 21:34:07,931 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 21:34:08,208 - [test_05add.py-->line:68] - ERROR: 用例----[借款金额范围错误]----执行成功
2022-06-12 21:34:08,679 - [test_06audit.py-->line:118] - ERROR: 用例----[审核通过]----执行成功
2022-06-12 21:34:08,938 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不通过]----执行成功
2022-06-12 21:34:09,110 - [test_06audit.py-->line:118] - ERROR: 用例----[审核不待审核状态]----执行成功
2022-06-12 21:34:09,290 - [test_06audit.py-->line:118] - ERROR: 用例----[参数approved_or_not为空]----执行成功
2022-06-12 21:34:09,470 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id为空]----执行成功
2022-06-12 21:34:09,648 - [test_06audit.py-->line:118] - ERROR: 用例----[项目id不存在]----执行成功
2022-06-12 21:34:10,597 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人正常投资]----执行成功
2022-06-12 21:34:10,688 - [test_07invest.py-->line:77] - ERROR: 用例----[投资人id为空]----执行成功
2022-06-12 21:34:10,778 - [test_07invest.py-->line:77] - ERROR: 用例----[标id为空]----执行成功
2022-06-12 21:34:10,860 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为空]----执行失败
2022-06-12 21:34:10,860 - [test_07invest.py-->line:74] - ERROR: '金额为空' not found in '余额为空'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' not found in '余额为空'
2022-06-12 21:34:10,953 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额为非100整数]----执行失败
2022-06-12 21:34:10,954 - [test_07invest.py-->line:74] - ERROR: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 64, in test_invest
    self.assertIn(expected['msg'],res['msg'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 1119, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python_yuyan1\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: '投资金额必须大于100，并且可以被100整除' not found in '充值金额必须大于100，并且可以被100整除'
2022-06-12 21:34:11,052 - [test_07invest.py-->line:77] - ERROR: 用例----[投资金额大于可投金额]----执行成功
2022-06-12 21:34:11,152 - [test_07invest.py-->line:73] - ERROR: 用例----[投资金额超过用户余额]----执行失败
2022-06-12 21:34:11,152 - [test_07invest.py-->line:74] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_07invest.py", line 62, in test_invest
    self.assertEqual(expected['code'],res['code'])
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2022-06-12 21:38:50,908 - [test_01register.py-->line:64] - ERROR: 用例-----[注册成功-带注册名]-----执行失败
2022-06-12 21:38:50,908 - [test_01register.py-->line:66] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 56, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:38:51,150 - [test_01register.py-->line:64] - ERROR: 用例-----[成功-不带用户名]-----执行失败
2022-06-12 21:38:51,151 - [test_01register.py-->line:66] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 56, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
2022-06-12 21:38:51,342 - [test_01register.py-->line:70] - INFO: 用例-----[不输入手机号]-----执行通过
2022-06-12 21:38:51,531 - [test_01register.py-->line:70] - INFO: 用例-----[手机号长度10位]-----执行通过
2022-06-12 21:38:51,722 - [test_01register.py-->line:70] - INFO: 用例-----[手机号长度12位]-----执行通过
2022-06-12 21:38:51,925 - [test_01register.py-->line:70] - INFO: 用例-----[手机号含有非法字符]-----执行通过
2022-06-12 21:38:52,169 - [test_01register.py-->line:70] - INFO: 用例-----[已注册过的手机号]-----执行通过
2022-06-12 21:38:52,367 - [test_01register.py-->line:70] - INFO: 用例-----[密码7位]-----执行通过
2022-06-12 21:38:52,553 - [test_01register.py-->line:70] - INFO: 用例-----[密码17位]-----执行通过
2022-06-12 21:38:52,743 - [test_01register.py-->line:70] - INFO: 用例-----[不输入密码]-----执行通过
2022-06-12 21:38:52,940 - [test_01register.py-->line:70] - INFO: 用例-----[用户名11位]-----执行通过
2022-06-12 21:38:53,136 - [test_01register.py-->line:70] - INFO: 用例-----[类型输入非0，1内容]-----执行通过
2022-06-12 21:38:53,390 - [test_01register.py-->line:64] - ERROR: 用例-----[不输入类型]-----执行失败
2022-06-12 21:38:53,390 - [test_01register.py-->line:66] - ERROR: 0 != 1005
Traceback (most recent call last):
  File "C:\Users\lenovo\PycharmProjects\py35\py35_21day_project\testcase\test_01register.py", line 56, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2021.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python_yuyan1\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005
